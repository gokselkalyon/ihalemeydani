//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IM.PresentationLayer.IhaleWCFService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IhaleWCFService.IIhaleService")]
    public interface IIhaleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetUser", ReplyAction="http://tempuri.org/IIhaleService/GetUserResponse")]
        IM.DataLayer.User GetUser(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetUser", ReplyAction="http://tempuri.org/IIhaleService/GetUserResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.User> GetUserAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddUser", ReplyAction="http://tempuri.org/IIhaleService/AddUserResponse")]
        void AddUser(IM.DataLayer.User entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddUser", ReplyAction="http://tempuri.org/IIhaleService/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(IM.DataLayer.User entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveUser", ReplyAction="http://tempuri.org/IIhaleService/RemoveUserResponse")]
        void RemoveUser(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveUser", ReplyAction="http://tempuri.org/IIhaleService/RemoveUserResponse")]
        System.Threading.Tasks.Task RemoveUserAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateUser", ReplyAction="http://tempuri.org/IIhaleService/UpdateUserResponse")]
        void UpdateUser(IM.DataLayer.User entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateUser", ReplyAction="http://tempuri.org/IIhaleService/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(IM.DataLayer.User entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetUserRoles", ReplyAction="http://tempuri.org/IIhaleService/GetUserRolesResponse")]
        System.Collections.Generic.List<IM.DataLayer.UserRole> GetUserRoles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetUserRoles", ReplyAction="http://tempuri.org/IIhaleService/GetUserRolesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.UserRole>> GetUserRolesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetUserRole", ReplyAction="http://tempuri.org/IIhaleService/GetUserRoleResponse")]
        IM.DataLayer.UserRole GetUserRole(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetUserRole", ReplyAction="http://tempuri.org/IIhaleService/GetUserRoleResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.UserRole> GetUserRoleAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddUserRole", ReplyAction="http://tempuri.org/IIhaleService/AddUserRoleResponse")]
        void AddUserRole(IM.DataLayer.UserRole entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddUserRole", ReplyAction="http://tempuri.org/IIhaleService/AddUserRoleResponse")]
        System.Threading.Tasks.Task AddUserRoleAsync(IM.DataLayer.UserRole entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveUserRole", ReplyAction="http://tempuri.org/IIhaleService/RemoveUserRoleResponse")]
        void RemoveUserRole(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveUserRole", ReplyAction="http://tempuri.org/IIhaleService/RemoveUserRoleResponse")]
        System.Threading.Tasks.Task RemoveUserRoleAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateUserRole", ReplyAction="http://tempuri.org/IIhaleService/UpdateUserRoleResponse")]
        void UpdateUserRole(IM.DataLayer.UserRole entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateUserRole", ReplyAction="http://tempuri.org/IIhaleService/UpdateUserRoleResponse")]
        System.Threading.Tasks.Task UpdateUserRoleAsync(IM.DataLayer.UserRole entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetUserTypes", ReplyAction="http://tempuri.org/IIhaleService/GetUserTypesResponse")]
        System.Collections.Generic.List<IM.DataLayer.UserType> GetUserTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetUserTypes", ReplyAction="http://tempuri.org/IIhaleService/GetUserTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.UserType>> GetUserTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetUserType", ReplyAction="http://tempuri.org/IIhaleService/GetUserTypeResponse")]
        IM.DataLayer.UserType GetUserType(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetUserType", ReplyAction="http://tempuri.org/IIhaleService/GetUserTypeResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.UserType> GetUserTypeAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddUserType", ReplyAction="http://tempuri.org/IIhaleService/AddUserTypeResponse")]
        void AddUserType(IM.DataLayer.UserType entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddUserType", ReplyAction="http://tempuri.org/IIhaleService/AddUserTypeResponse")]
        System.Threading.Tasks.Task AddUserTypeAsync(IM.DataLayer.UserType entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveUserType", ReplyAction="http://tempuri.org/IIhaleService/RemoveUserTypeResponse")]
        void RemoveUserType(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveUserType", ReplyAction="http://tempuri.org/IIhaleService/RemoveUserTypeResponse")]
        System.Threading.Tasks.Task RemoveUserTypeAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateUserType", ReplyAction="http://tempuri.org/IIhaleService/UpdateUserTypeResponse")]
        void UpdateUserType(IM.DataLayer.UserType entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateUserType", ReplyAction="http://tempuri.org/IIhaleService/UpdateUserTypeResponse")]
        System.Threading.Tasks.Task UpdateUserTypeAsync(IM.DataLayer.UserType entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetNatification", ReplyAction="http://tempuri.org/IIhaleService/GetNatificationResponse")]
        IM.DataLayer.natification GetNatification(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetNatification", ReplyAction="http://tempuri.org/IIhaleService/GetNatificationResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.natification> GetNatificationAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddNatification", ReplyAction="http://tempuri.org/IIhaleService/AddNatificationResponse")]
        void AddNatification(IM.DataLayer.natification entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddNatification", ReplyAction="http://tempuri.org/IIhaleService/AddNatificationResponse")]
        System.Threading.Tasks.Task AddNatificationAsync(IM.DataLayer.natification entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveNatification", ReplyAction="http://tempuri.org/IIhaleService/RemoveNatificationResponse")]
        void RemoveNatification(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveNatification", ReplyAction="http://tempuri.org/IIhaleService/RemoveNatificationResponse")]
        System.Threading.Tasks.Task RemoveNatificationAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateNatification", ReplyAction="http://tempuri.org/IIhaleService/UpdateNatificationResponse")]
        void UpdateNatification(IM.DataLayer.natification entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateNatification", ReplyAction="http://tempuri.org/IIhaleService/UpdateNatificationResponse")]
        System.Threading.Tasks.Task UpdateNatificationAsync(IM.DataLayer.natification entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Getodeme_yontemleri", ReplyAction="http://tempuri.org/IIhaleService/Getodeme_yontemleriResponse")]
        System.Collections.Generic.List<IM.DataLayer.odeme_yontemi> Getodeme_yontemleri();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Getodeme_yontemleri", ReplyAction="http://tempuri.org/IIhaleService/Getodeme_yontemleriResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.odeme_yontemi>> Getodeme_yontemleriAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetOdemeYontemi", ReplyAction="http://tempuri.org/IIhaleService/GetOdemeYontemiResponse")]
        IM.DataLayer.odeme_yontemi GetOdemeYontemi(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetOdemeYontemi", ReplyAction="http://tempuri.org/IIhaleService/GetOdemeYontemiResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.odeme_yontemi> GetOdemeYontemiAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddOdemeYontemi", ReplyAction="http://tempuri.org/IIhaleService/AddOdemeYontemiResponse")]
        void AddOdemeYontemi(IM.DataLayer.odeme_yontemi entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddOdemeYontemi", ReplyAction="http://tempuri.org/IIhaleService/AddOdemeYontemiResponse")]
        System.Threading.Tasks.Task AddOdemeYontemiAsync(IM.DataLayer.odeme_yontemi entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveOdemeYontemi", ReplyAction="http://tempuri.org/IIhaleService/RemoveOdemeYontemiResponse")]
        void RemoveOdemeYontemi(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveOdemeYontemi", ReplyAction="http://tempuri.org/IIhaleService/RemoveOdemeYontemiResponse")]
        System.Threading.Tasks.Task RemoveOdemeYontemiAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateOdemeYontemi", ReplyAction="http://tempuri.org/IIhaleService/UpdateOdemeYontemiResponse")]
        void UpdateOdemeYontemi(IM.DataLayer.odeme_yontemi entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateOdemeYontemi", ReplyAction="http://tempuri.org/IIhaleService/UpdateOdemeYontemiResponse")]
        System.Threading.Tasks.Task UpdateOdemeYontemiAsync(IM.DataLayer.odeme_yontemi entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetPaymentPlans", ReplyAction="http://tempuri.org/IIhaleService/GetPaymentPlansResponse")]
        System.Collections.Generic.List<IM.DataLayer.payment_plan> GetPaymentPlans();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetPaymentPlans", ReplyAction="http://tempuri.org/IIhaleService/GetPaymentPlansResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.payment_plan>> GetPaymentPlansAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetPaymentPlan", ReplyAction="http://tempuri.org/IIhaleService/GetPaymentPlanResponse")]
        IM.DataLayer.payment_plan GetPaymentPlan(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetPaymentPlan", ReplyAction="http://tempuri.org/IIhaleService/GetPaymentPlanResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.payment_plan> GetPaymentPlanAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddPaymentPlan", ReplyAction="http://tempuri.org/IIhaleService/AddPaymentPlanResponse")]
        void AddPaymentPlan(IM.DataLayer.payment_plan entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddPaymentPlan", ReplyAction="http://tempuri.org/IIhaleService/AddPaymentPlanResponse")]
        System.Threading.Tasks.Task AddPaymentPlanAsync(IM.DataLayer.payment_plan entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemovePaymentPlan", ReplyAction="http://tempuri.org/IIhaleService/RemovePaymentPlanResponse")]
        void RemovePaymentPlan(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemovePaymentPlan", ReplyAction="http://tempuri.org/IIhaleService/RemovePaymentPlanResponse")]
        System.Threading.Tasks.Task RemovePaymentPlanAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdatePaymentPlan", ReplyAction="http://tempuri.org/IIhaleService/UpdatePaymentPlanResponse")]
        void UpdatePaymentPlan(IM.DataLayer.payment_plan entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdatePaymentPlan", ReplyAction="http://tempuri.org/IIhaleService/UpdatePaymentPlanResponse")]
        System.Threading.Tasks.Task UpdatePaymentPlanAsync(IM.DataLayer.payment_plan entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetPosts", ReplyAction="http://tempuri.org/IIhaleService/GetPostsResponse")]
        System.Collections.Generic.List<IM.DataLayer.Post> GetPosts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetPosts", ReplyAction="http://tempuri.org/IIhaleService/GetPostsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.Post>> GetPostsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetPost", ReplyAction="http://tempuri.org/IIhaleService/GetPostResponse")]
        IM.DataLayer.Post GetPost(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetPost", ReplyAction="http://tempuri.org/IIhaleService/GetPostResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.Post> GetPostAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddPost", ReplyAction="http://tempuri.org/IIhaleService/AddPostResponse")]
        void AddPost(IM.DataLayer.Post entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddPost", ReplyAction="http://tempuri.org/IIhaleService/AddPostResponse")]
        System.Threading.Tasks.Task AddPostAsync(IM.DataLayer.Post entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemovePost", ReplyAction="http://tempuri.org/IIhaleService/RemovePostResponse")]
        void RemovePost(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemovePost", ReplyAction="http://tempuri.org/IIhaleService/RemovePostResponse")]
        System.Threading.Tasks.Task RemovePostAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdatePost", ReplyAction="http://tempuri.org/IIhaleService/UpdatePostResponse")]
        void UpdatePost(IM.DataLayer.Post entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdatePost", ReplyAction="http://tempuri.org/IIhaleService/UpdatePostResponse")]
        System.Threading.Tasks.Task UpdatePostAsync(IM.DataLayer.Post entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetPricebots", ReplyAction="http://tempuri.org/IIhaleService/GetPricebotsResponse")]
        System.Collections.Generic.List<IM.DataLayer.PRICEBOT> GetPricebots();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetPricebots", ReplyAction="http://tempuri.org/IIhaleService/GetPricebotsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.PRICEBOT>> GetPricebotsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetPricebot", ReplyAction="http://tempuri.org/IIhaleService/GetPricebotResponse")]
        IM.DataLayer.PRICEBOT GetPricebot(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetPricebot", ReplyAction="http://tempuri.org/IIhaleService/GetPricebotResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.PRICEBOT> GetPricebotAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddPricebot", ReplyAction="http://tempuri.org/IIhaleService/AddPricebotResponse")]
        void AddPricebot(IM.DataLayer.PRICEBOT entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddPricebot", ReplyAction="http://tempuri.org/IIhaleService/AddPricebotResponse")]
        System.Threading.Tasks.Task AddPricebotAsync(IM.DataLayer.PRICEBOT entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemovePricebot", ReplyAction="http://tempuri.org/IIhaleService/RemovePricebotResponse")]
        void RemovePricebot(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemovePricebot", ReplyAction="http://tempuri.org/IIhaleService/RemovePricebotResponse")]
        System.Threading.Tasks.Task RemovePricebotAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdatePricebot", ReplyAction="http://tempuri.org/IIhaleService/UpdatePricebotResponse")]
        void UpdatePricebot(IM.DataLayer.PRICEBOT entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdatePricebot", ReplyAction="http://tempuri.org/IIhaleService/UpdatePricebotResponse")]
        System.Threading.Tasks.Task UpdatePricebotAsync(IM.DataLayer.PRICEBOT entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetRoles", ReplyAction="http://tempuri.org/IIhaleService/GetRolesResponse")]
        System.Collections.Generic.List<IM.DataLayer.Role> GetRoles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetRoles", ReplyAction="http://tempuri.org/IIhaleService/GetRolesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.Role>> GetRolesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetRole", ReplyAction="http://tempuri.org/IIhaleService/GetRoleResponse")]
        IM.DataLayer.Role GetRole(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetRole", ReplyAction="http://tempuri.org/IIhaleService/GetRoleResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.Role> GetRoleAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddRole", ReplyAction="http://tempuri.org/IIhaleService/AddRoleResponse")]
        void AddRole(IM.DataLayer.Role entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddRole", ReplyAction="http://tempuri.org/IIhaleService/AddRoleResponse")]
        System.Threading.Tasks.Task AddRoleAsync(IM.DataLayer.Role entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveRole", ReplyAction="http://tempuri.org/IIhaleService/RemoveRoleResponse")]
        void RemoveRole(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveRole", ReplyAction="http://tempuri.org/IIhaleService/RemoveRoleResponse")]
        System.Threading.Tasks.Task RemoveRoleAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateRole", ReplyAction="http://tempuri.org/IIhaleService/UpdateRoleResponse")]
        void UpdateRole(IM.DataLayer.Role entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateRole", ReplyAction="http://tempuri.org/IIhaleService/UpdateRoleResponse")]
        System.Threading.Tasks.Task UpdateRoleAsync(IM.DataLayer.Role entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetRoleClaims", ReplyAction="http://tempuri.org/IIhaleService/GetRoleClaimsResponse")]
        System.Collections.Generic.List<IM.DataLayer.RoleClaim> GetRoleClaims();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetRoleClaims", ReplyAction="http://tempuri.org/IIhaleService/GetRoleClaimsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.RoleClaim>> GetRoleClaimsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetRoleClaim", ReplyAction="http://tempuri.org/IIhaleService/GetRoleClaimResponse")]
        IM.DataLayer.RoleClaim GetRoleClaim(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetRoleClaim", ReplyAction="http://tempuri.org/IIhaleService/GetRoleClaimResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.RoleClaim> GetRoleClaimAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddRoleClaim", ReplyAction="http://tempuri.org/IIhaleService/AddRoleClaimResponse")]
        void AddRoleClaim(IM.DataLayer.RoleClaim entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddRoleClaim", ReplyAction="http://tempuri.org/IIhaleService/AddRoleClaimResponse")]
        System.Threading.Tasks.Task AddRoleClaimAsync(IM.DataLayer.RoleClaim entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveRoleClaim", ReplyAction="http://tempuri.org/IIhaleService/RemoveRoleClaimResponse")]
        void RemoveRoleClaim(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveRoleClaim", ReplyAction="http://tempuri.org/IIhaleService/RemoveRoleClaimResponse")]
        System.Threading.Tasks.Task RemoveRoleClaimAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateRoleClaim", ReplyAction="http://tempuri.org/IIhaleService/UpdateRoleClaimResponse")]
        void UpdateRoleClaim(IM.DataLayer.RoleClaim entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateRoleClaim", ReplyAction="http://tempuri.org/IIhaleService/UpdateRoleClaimResponse")]
        System.Threading.Tasks.Task UpdateRoleClaimAsync(IM.DataLayer.RoleClaim entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetSegments", ReplyAction="http://tempuri.org/IIhaleService/GetSegmentsResponse")]
        System.Collections.Generic.List<IM.DataLayer.Segment> GetSegments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetSegments", ReplyAction="http://tempuri.org/IIhaleService/GetSegmentsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.Segment>> GetSegmentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetSegment", ReplyAction="http://tempuri.org/IIhaleService/GetSegmentResponse")]
        IM.DataLayer.Segment GetSegment(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetSegment", ReplyAction="http://tempuri.org/IIhaleService/GetSegmentResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.Segment> GetSegmentAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddSegment", ReplyAction="http://tempuri.org/IIhaleService/AddSegmentResponse")]
        void AddSegment(IM.DataLayer.Segment entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddSegment", ReplyAction="http://tempuri.org/IIhaleService/AddSegmentResponse")]
        System.Threading.Tasks.Task AddSegmentAsync(IM.DataLayer.Segment entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveSegment", ReplyAction="http://tempuri.org/IIhaleService/RemoveSegmentResponse")]
        void RemoveSegment(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveSegment", ReplyAction="http://tempuri.org/IIhaleService/RemoveSegmentResponse")]
        System.Threading.Tasks.Task RemoveSegmentAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateSegment", ReplyAction="http://tempuri.org/IIhaleService/UpdateSegmentResponse")]
        void UpdateSegment(IM.DataLayer.Segment entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateSegment", ReplyAction="http://tempuri.org/IIhaleService/UpdateSegmentResponse")]
        System.Threading.Tasks.Task UpdateSegmentAsync(IM.DataLayer.Segment entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetSenarios", ReplyAction="http://tempuri.org/IIhaleService/GetSenariosResponse")]
        System.Collections.Generic.List<IM.DataLayer.senaryo> GetSenarios();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetSenarios", ReplyAction="http://tempuri.org/IIhaleService/GetSenariosResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.senaryo>> GetSenariosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetSenario", ReplyAction="http://tempuri.org/IIhaleService/GetSenarioResponse")]
        IM.DataLayer.senaryo GetSenario(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetSenario", ReplyAction="http://tempuri.org/IIhaleService/GetSenarioResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.senaryo> GetSenarioAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddSenario", ReplyAction="http://tempuri.org/IIhaleService/AddSenarioResponse")]
        void AddSenario(IM.DataLayer.senaryo entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddSenario", ReplyAction="http://tempuri.org/IIhaleService/AddSenarioResponse")]
        System.Threading.Tasks.Task AddSenarioAsync(IM.DataLayer.senaryo entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveSenario", ReplyAction="http://tempuri.org/IIhaleService/RemoveSenarioResponse")]
        void RemoveSenario(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveSenario", ReplyAction="http://tempuri.org/IIhaleService/RemoveSenarioResponse")]
        System.Threading.Tasks.Task RemoveSenarioAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateSenario", ReplyAction="http://tempuri.org/IIhaleService/UpdateSenarioResponse")]
        void UpdateSenario(IM.DataLayer.senaryo entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateSenario", ReplyAction="http://tempuri.org/IIhaleService/UpdateSenarioResponse")]
        System.Threading.Tasks.Task UpdateSenarioAsync(IM.DataLayer.senaryo entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetSocialMedias", ReplyAction="http://tempuri.org/IIhaleService/GetSocialMediasResponse")]
        System.Collections.Generic.List<IM.DataLayer.SocialMedya> GetSocialMedias();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetSocialMedias", ReplyAction="http://tempuri.org/IIhaleService/GetSocialMediasResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.SocialMedya>> GetSocialMediasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetSocialMedia", ReplyAction="http://tempuri.org/IIhaleService/GetSocialMediaResponse")]
        IM.DataLayer.SocialMedya GetSocialMedia(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetSocialMedia", ReplyAction="http://tempuri.org/IIhaleService/GetSocialMediaResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.SocialMedya> GetSocialMediaAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddSocialMedia", ReplyAction="http://tempuri.org/IIhaleService/AddSocialMediaResponse")]
        void AddSocialMedia(IM.DataLayer.SocialMedya entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddSocialMedia", ReplyAction="http://tempuri.org/IIhaleService/AddSocialMediaResponse")]
        System.Threading.Tasks.Task AddSocialMediaAsync(IM.DataLayer.SocialMedya entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveSocialMedia", ReplyAction="http://tempuri.org/IIhaleService/RemoveSocialMediaResponse")]
        void RemoveSocialMedia(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveSocialMedia", ReplyAction="http://tempuri.org/IIhaleService/RemoveSocialMediaResponse")]
        System.Threading.Tasks.Task RemoveSocialMediaAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateSocialMedia", ReplyAction="http://tempuri.org/IIhaleService/UpdateSocialMediaResponse")]
        void UpdateSocialMedia(IM.DataLayer.SocialMedya entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateSocialMedia", ReplyAction="http://tempuri.org/IIhaleService/UpdateSocialMediaResponse")]
        System.Threading.Tasks.Task UpdateSocialMediaAsync(IM.DataLayer.SocialMedya entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetSoldProducts", ReplyAction="http://tempuri.org/IIhaleService/GetSoldProductsResponse")]
        System.Collections.Generic.List<IM.DataLayer.SOLD_PRODUCT> GetSoldProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetSoldProducts", ReplyAction="http://tempuri.org/IIhaleService/GetSoldProductsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.SOLD_PRODUCT>> GetSoldProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetSoldProduct", ReplyAction="http://tempuri.org/IIhaleService/GetSoldProductResponse")]
        IM.DataLayer.SOLD_PRODUCT GetSoldProduct(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetSoldProduct", ReplyAction="http://tempuri.org/IIhaleService/GetSoldProductResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.SOLD_PRODUCT> GetSoldProductAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddSoldProduct", ReplyAction="http://tempuri.org/IIhaleService/AddSoldProductResponse")]
        void AddSoldProduct(IM.DataLayer.SOLD_PRODUCT entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddSoldProduct", ReplyAction="http://tempuri.org/IIhaleService/AddSoldProductResponse")]
        System.Threading.Tasks.Task AddSoldProductAsync(IM.DataLayer.SOLD_PRODUCT entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveSoldProduct", ReplyAction="http://tempuri.org/IIhaleService/RemoveSoldProductResponse")]
        void RemoveSoldProduct(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveSoldProduct", ReplyAction="http://tempuri.org/IIhaleService/RemoveSoldProductResponse")]
        System.Threading.Tasks.Task RemoveSoldProductAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateSoldProduct", ReplyAction="http://tempuri.org/IIhaleService/UpdateSoldProductResponse")]
        void UpdateSoldProduct(IM.DataLayer.SOLD_PRODUCT entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateSoldProduct", ReplyAction="http://tempuri.org/IIhaleService/UpdateSoldProductResponse")]
        System.Threading.Tasks.Task UpdateSoldProductAsync(IM.DataLayer.SOLD_PRODUCT entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetSubmits", ReplyAction="http://tempuri.org/IIhaleService/GetSubmitsResponse")]
        System.Collections.Generic.List<IM.DataLayer.submit> GetSubmits();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetSubmits", ReplyAction="http://tempuri.org/IIhaleService/GetSubmitsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.submit>> GetSubmitsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetSubmit", ReplyAction="http://tempuri.org/IIhaleService/GetSubmitResponse")]
        IM.DataLayer.submit GetSubmit(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetSubmit", ReplyAction="http://tempuri.org/IIhaleService/GetSubmitResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.submit> GetSubmitAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddSubmit", ReplyAction="http://tempuri.org/IIhaleService/AddSubmitResponse")]
        void AddSubmit(IM.DataLayer.submit entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddSubmit", ReplyAction="http://tempuri.org/IIhaleService/AddSubmitResponse")]
        System.Threading.Tasks.Task AddSubmitAsync(IM.DataLayer.submit entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveSubmit", ReplyAction="http://tempuri.org/IIhaleService/RemoveSubmitResponse")]
        void RemoveSubmit(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveSubmit", ReplyAction="http://tempuri.org/IIhaleService/RemoveSubmitResponse")]
        System.Threading.Tasks.Task RemoveSubmitAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateSubmit", ReplyAction="http://tempuri.org/IIhaleService/UpdateSubmitResponse")]
        void UpdateSubmit(IM.DataLayer.submit entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateSubmit", ReplyAction="http://tempuri.org/IIhaleService/UpdateSubmitResponse")]
        System.Threading.Tasks.Task UpdateSubmitAsync(IM.DataLayer.submit entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetSysdiagrams", ReplyAction="http://tempuri.org/IIhaleService/GetSysdiagramsResponse")]
        System.Collections.Generic.List<IM.DataLayer.sysdiagram> GetSysdiagrams();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetSysdiagrams", ReplyAction="http://tempuri.org/IIhaleService/GetSysdiagramsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.sysdiagram>> GetSysdiagramsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetSysdiagram", ReplyAction="http://tempuri.org/IIhaleService/GetSysdiagramResponse")]
        IM.DataLayer.sysdiagram GetSysdiagram(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetSysdiagram", ReplyAction="http://tempuri.org/IIhaleService/GetSysdiagramResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.sysdiagram> GetSysdiagramAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddSysdiagram", ReplyAction="http://tempuri.org/IIhaleService/AddSysdiagramResponse")]
        void AddSysdiagram(IM.DataLayer.sysdiagram entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddSysdiagram", ReplyAction="http://tempuri.org/IIhaleService/AddSysdiagramResponse")]
        System.Threading.Tasks.Task AddSysdiagramAsync(IM.DataLayer.sysdiagram entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveSysdiagram", ReplyAction="http://tempuri.org/IIhaleService/RemoveSysdiagramResponse")]
        void RemoveSysdiagram(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveSysdiagram", ReplyAction="http://tempuri.org/IIhaleService/RemoveSysdiagramResponse")]
        System.Threading.Tasks.Task RemoveSysdiagramAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateSysdiagram", ReplyAction="http://tempuri.org/IIhaleService/UpdateSysdiagramResponse")]
        void UpdateSysdiagram(IM.DataLayer.sysdiagram entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateSysdiagram", ReplyAction="http://tempuri.org/IIhaleService/UpdateSysdiagramResponse")]
        System.Threading.Tasks.Task UpdateSysdiagramAsync(IM.DataLayer.sysdiagram entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetTags", ReplyAction="http://tempuri.org/IIhaleService/GetTagsResponse")]
        System.Collections.Generic.List<IM.DataLayer.tag> GetTags();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetTags", ReplyAction="http://tempuri.org/IIhaleService/GetTagsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.tag>> GetTagsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetTag", ReplyAction="http://tempuri.org/IIhaleService/GetTagResponse")]
        IM.DataLayer.tag GetTag(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetTag", ReplyAction="http://tempuri.org/IIhaleService/GetTagResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.tag> GetTagAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddTag", ReplyAction="http://tempuri.org/IIhaleService/AddTagResponse")]
        void AddTag(IM.DataLayer.tag entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddTag", ReplyAction="http://tempuri.org/IIhaleService/AddTagResponse")]
        System.Threading.Tasks.Task AddTagAsync(IM.DataLayer.tag entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveTag", ReplyAction="http://tempuri.org/IIhaleService/RemoveTagResponse")]
        void RemoveTag(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveTag", ReplyAction="http://tempuri.org/IIhaleService/RemoveTagResponse")]
        System.Threading.Tasks.Task RemoveTagAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateTag", ReplyAction="http://tempuri.org/IIhaleService/UpdateTagResponse")]
        void UpdateTag(IM.DataLayer.tag entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateTag", ReplyAction="http://tempuri.org/IIhaleService/UpdateTagResponse")]
        System.Threading.Tasks.Task UpdateTagAsync(IM.DataLayer.tag entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetTagPosts", ReplyAction="http://tempuri.org/IIhaleService/GetTagPostsResponse")]
        System.Collections.Generic.List<IM.DataLayer.tag_post> GetTagPosts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetTagPosts", ReplyAction="http://tempuri.org/IIhaleService/GetTagPostsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.tag_post>> GetTagPostsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetTagPost", ReplyAction="http://tempuri.org/IIhaleService/GetTagPostResponse")]
        IM.DataLayer.tag_post GetTagPost(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetTagPost", ReplyAction="http://tempuri.org/IIhaleService/GetTagPostResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.tag_post> GetTagPostAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddTagPost", ReplyAction="http://tempuri.org/IIhaleService/AddTagPostResponse")]
        void AddTagPost(IM.DataLayer.tag_post entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddTagPost", ReplyAction="http://tempuri.org/IIhaleService/AddTagPostResponse")]
        System.Threading.Tasks.Task AddTagPostAsync(IM.DataLayer.tag_post entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveTagPost", ReplyAction="http://tempuri.org/IIhaleService/RemoveTagPostResponse")]
        void RemoveTagPost(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveTagPost", ReplyAction="http://tempuri.org/IIhaleService/RemoveTagPostResponse")]
        System.Threading.Tasks.Task RemoveTagPostAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateTagPost", ReplyAction="http://tempuri.org/IIhaleService/UpdateTagPostResponse")]
        void UpdateTagPost(IM.DataLayer.tag_post entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateTagPost", ReplyAction="http://tempuri.org/IIhaleService/UpdateTagPostResponse")]
        System.Threading.Tasks.Task UpdateTagPostAsync(IM.DataLayer.tag_post entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetTax_Administrations", ReplyAction="http://tempuri.org/IIhaleService/GetTax_AdministrationsResponse")]
        System.Collections.Generic.List<IM.DataLayer.Tax_Administration> GetTax_Administrations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetTax_Administrations", ReplyAction="http://tempuri.org/IIhaleService/GetTax_AdministrationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.Tax_Administration>> GetTax_AdministrationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetTax_Administration", ReplyAction="http://tempuri.org/IIhaleService/GetTax_AdministrationResponse")]
        IM.DataLayer.Tax_Administration GetTax_Administration(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetTax_Administration", ReplyAction="http://tempuri.org/IIhaleService/GetTax_AdministrationResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.Tax_Administration> GetTax_AdministrationAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddTax_Administration", ReplyAction="http://tempuri.org/IIhaleService/AddTax_AdministrationResponse")]
        void AddTax_Administration(IM.DataLayer.Tax_Administration entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddTax_Administration", ReplyAction="http://tempuri.org/IIhaleService/AddTax_AdministrationResponse")]
        System.Threading.Tasks.Task AddTax_AdministrationAsync(IM.DataLayer.Tax_Administration entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveTax_Administration", ReplyAction="http://tempuri.org/IIhaleService/RemoveTax_AdministrationResponse")]
        void RemoveTax_Administration(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveTax_Administration", ReplyAction="http://tempuri.org/IIhaleService/RemoveTax_AdministrationResponse")]
        System.Threading.Tasks.Task RemoveTax_AdministrationAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateTax_Administration", ReplyAction="http://tempuri.org/IIhaleService/UpdateTax_AdministrationResponse")]
        void UpdateTax_Administration(IM.DataLayer.Tax_Administration entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateTax_Administration", ReplyAction="http://tempuri.org/IIhaleService/UpdateTax_AdministrationResponse")]
        System.Threading.Tasks.Task UpdateTax_AdministrationAsync(IM.DataLayer.Tax_Administration entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetTitles", ReplyAction="http://tempuri.org/IIhaleService/GetTitlesResponse")]
        System.Collections.Generic.List<IM.DataLayer.title> GetTitles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetTitles", ReplyAction="http://tempuri.org/IIhaleService/GetTitlesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.title>> GetTitlesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetTitle", ReplyAction="http://tempuri.org/IIhaleService/GetTitleResponse")]
        IM.DataLayer.title GetTitle(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetTitle", ReplyAction="http://tempuri.org/IIhaleService/GetTitleResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.title> GetTitleAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddTitle", ReplyAction="http://tempuri.org/IIhaleService/AddTitleResponse")]
        void AddTitle(IM.DataLayer.title entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddTitle", ReplyAction="http://tempuri.org/IIhaleService/AddTitleResponse")]
        System.Threading.Tasks.Task AddTitleAsync(IM.DataLayer.title entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveTitle", ReplyAction="http://tempuri.org/IIhaleService/RemoveTitleResponse")]
        void RemoveTitle(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveTitle", ReplyAction="http://tempuri.org/IIhaleService/RemoveTitleResponse")]
        System.Threading.Tasks.Task RemoveTitleAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateTitle", ReplyAction="http://tempuri.org/IIhaleService/UpdateTitleResponse")]
        void UpdateTitle(IM.DataLayer.title entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateTitle", ReplyAction="http://tempuri.org/IIhaleService/UpdateTitleResponse")]
        System.Threading.Tasks.Task UpdateTitleAsync(IM.DataLayer.title entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetUsers", ReplyAction="http://tempuri.org/IIhaleService/GetUsersResponse")]
        System.Collections.Generic.List<IM.DataLayer.User> GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetUsers", ReplyAction="http://tempuri.org/IIhaleService/GetUsersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.User>> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateColor", ReplyAction="http://tempuri.org/IIhaleService/UpdateColorResponse")]
        void UpdateColor(IM.DataLayer.Color entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateColor", ReplyAction="http://tempuri.org/IIhaleService/UpdateColorResponse")]
        System.Threading.Tasks.Task UpdateColorAsync(IM.DataLayer.Color entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCompanies", ReplyAction="http://tempuri.org/IIhaleService/GetCompaniesResponse")]
        System.Collections.Generic.List<IM.DataLayer.company> GetCompanies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCompanies", ReplyAction="http://tempuri.org/IIhaleService/GetCompaniesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.company>> GetCompaniesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCompany", ReplyAction="http://tempuri.org/IIhaleService/GetCompanyResponse")]
        IM.DataLayer.company GetCompany(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCompany", ReplyAction="http://tempuri.org/IIhaleService/GetCompanyResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.company> GetCompanyAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddCompany", ReplyAction="http://tempuri.org/IIhaleService/AddCompanyResponse")]
        void AddCompany(IM.DataLayer.company entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddCompany", ReplyAction="http://tempuri.org/IIhaleService/AddCompanyResponse")]
        System.Threading.Tasks.Task AddCompanyAsync(IM.DataLayer.company entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveCompany", ReplyAction="http://tempuri.org/IIhaleService/RemoveCompanyResponse")]
        void RemoveCompany(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveCompany", ReplyAction="http://tempuri.org/IIhaleService/RemoveCompanyResponse")]
        System.Threading.Tasks.Task RemoveCompanyAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateCompany", ReplyAction="http://tempuri.org/IIhaleService/UpdateCompanyResponse")]
        void UpdateCompany(IM.DataLayer.company entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateCompany", ReplyAction="http://tempuri.org/IIhaleService/UpdateCompanyResponse")]
        System.Threading.Tasks.Task UpdateCompanyAsync(IM.DataLayer.company entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCompanyTypies", ReplyAction="http://tempuri.org/IIhaleService/GetCompanyTypiesResponse")]
        System.Collections.Generic.List<IM.DataLayer.company_type> GetCompanyTypies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCompanyTypies", ReplyAction="http://tempuri.org/IIhaleService/GetCompanyTypiesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.company_type>> GetCompanyTypiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCompanyType", ReplyAction="http://tempuri.org/IIhaleService/GetCompanyTypeResponse")]
        IM.DataLayer.company_type GetCompanyType(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCompanyType", ReplyAction="http://tempuri.org/IIhaleService/GetCompanyTypeResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.company_type> GetCompanyTypeAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddCompanyType", ReplyAction="http://tempuri.org/IIhaleService/AddCompanyTypeResponse")]
        void AddCompanyType(IM.DataLayer.company_type entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddCompanyType", ReplyAction="http://tempuri.org/IIhaleService/AddCompanyTypeResponse")]
        System.Threading.Tasks.Task AddCompanyTypeAsync(IM.DataLayer.company_type entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveCompanyType", ReplyAction="http://tempuri.org/IIhaleService/RemoveCompanyTypeResponse")]
        void RemoveCompanyType(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveCompanyType", ReplyAction="http://tempuri.org/IIhaleService/RemoveCompanyTypeResponse")]
        System.Threading.Tasks.Task RemoveCompanyTypeAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateCompanyType", ReplyAction="http://tempuri.org/IIhaleService/UpdateCompanyTypeResponse")]
        void UpdateCompanyType(IM.DataLayer.company_type entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateCompanyType", ReplyAction="http://tempuri.org/IIhaleService/UpdateCompanyTypeResponse")]
        System.Threading.Tasks.Task UpdateCompanyTypeAsync(IM.DataLayer.company_type entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCountries", ReplyAction="http://tempuri.org/IIhaleService/GetCountriesResponse")]
        System.Collections.Generic.List<IM.DataLayer.country> GetCountries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCountries", ReplyAction="http://tempuri.org/IIhaleService/GetCountriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.country>> GetCountriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCountry", ReplyAction="http://tempuri.org/IIhaleService/GetCountryResponse")]
        IM.DataLayer.country GetCountry(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCountry", ReplyAction="http://tempuri.org/IIhaleService/GetCountryResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.country> GetCountryAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddCountry", ReplyAction="http://tempuri.org/IIhaleService/AddCountryResponse")]
        void AddCountry(IM.DataLayer.country entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddCountry", ReplyAction="http://tempuri.org/IIhaleService/AddCountryResponse")]
        System.Threading.Tasks.Task AddCountryAsync(IM.DataLayer.country entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveCountry", ReplyAction="http://tempuri.org/IIhaleService/RemoveCountryResponse")]
        void RemoveCountry(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveCountry", ReplyAction="http://tempuri.org/IIhaleService/RemoveCountryResponse")]
        System.Threading.Tasks.Task RemoveCountryAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateCountry", ReplyAction="http://tempuri.org/IIhaleService/UpdateCountryResponse")]
        void UpdateCountry(IM.DataLayer.country entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateCountry", ReplyAction="http://tempuri.org/IIhaleService/UpdateCountryResponse")]
        System.Threading.Tasks.Task UpdateCountryAsync(IM.DataLayer.country entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCounties", ReplyAction="http://tempuri.org/IIhaleService/GetCountiesResponse")]
        System.Collections.Generic.List<IM.DataLayer.county> GetCounties();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCounties", ReplyAction="http://tempuri.org/IIhaleService/GetCountiesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.county>> GetCountiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCounty", ReplyAction="http://tempuri.org/IIhaleService/GetCountyResponse")]
        IM.DataLayer.county GetCounty(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCounty", ReplyAction="http://tempuri.org/IIhaleService/GetCountyResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.county> GetCountyAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddCounty", ReplyAction="http://tempuri.org/IIhaleService/AddCountyResponse")]
        void AddCounty(IM.DataLayer.county entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddCounty", ReplyAction="http://tempuri.org/IIhaleService/AddCountyResponse")]
        System.Threading.Tasks.Task AddCountyAsync(IM.DataLayer.county entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveCounty", ReplyAction="http://tempuri.org/IIhaleService/RemoveCountyResponse")]
        void RemoveCounty(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveCounty", ReplyAction="http://tempuri.org/IIhaleService/RemoveCountyResponse")]
        System.Threading.Tasks.Task RemoveCountyAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateCounty", ReplyAction="http://tempuri.org/IIhaleService/UpdateCountyResponse")]
        void UpdateCounty(IM.DataLayer.county entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateCounty", ReplyAction="http://tempuri.org/IIhaleService/UpdateCountyResponse")]
        System.Threading.Tasks.Task UpdateCountyAsync(IM.DataLayer.county entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCurrencies", ReplyAction="http://tempuri.org/IIhaleService/GetCurrenciesResponse")]
        System.Collections.Generic.List<IM.DataLayer.CURRENCY> GetCurrencies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCurrencies", ReplyAction="http://tempuri.org/IIhaleService/GetCurrenciesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.CURRENCY>> GetCurrenciesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCurrency", ReplyAction="http://tempuri.org/IIhaleService/GetCurrencyResponse")]
        IM.DataLayer.CURRENCY GetCurrency(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCurrency", ReplyAction="http://tempuri.org/IIhaleService/GetCurrencyResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.CURRENCY> GetCurrencyAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddCurrency", ReplyAction="http://tempuri.org/IIhaleService/AddCurrencyResponse")]
        void AddCurrency(IM.DataLayer.CURRENCY entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddCurrency", ReplyAction="http://tempuri.org/IIhaleService/AddCurrencyResponse")]
        System.Threading.Tasks.Task AddCurrencyAsync(IM.DataLayer.CURRENCY entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveCurrency", ReplyAction="http://tempuri.org/IIhaleService/RemoveCurrencyResponse")]
        void RemoveCurrency(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveCurrency", ReplyAction="http://tempuri.org/IIhaleService/RemoveCurrencyResponse")]
        System.Threading.Tasks.Task RemoveCurrencyAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateCurrency", ReplyAction="http://tempuri.org/IIhaleService/UpdateCurrencyResponse")]
        void UpdateCurrency(IM.DataLayer.CURRENCY entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateCurrency", ReplyAction="http://tempuri.org/IIhaleService/UpdateCurrencyResponse")]
        System.Threading.Tasks.Task UpdateCurrencyAsync(IM.DataLayer.CURRENCY entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetDiscountcarts", ReplyAction="http://tempuri.org/IIhaleService/GetDiscountcartsResponse")]
        System.Collections.Generic.List<IM.DataLayer.discountcart> GetDiscountcarts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetDiscountcarts", ReplyAction="http://tempuri.org/IIhaleService/GetDiscountcartsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.discountcart>> GetDiscountcartsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetDiscountcart", ReplyAction="http://tempuri.org/IIhaleService/GetDiscountcartResponse")]
        IM.DataLayer.discountcart GetDiscountcart(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetDiscountcart", ReplyAction="http://tempuri.org/IIhaleService/GetDiscountcartResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.discountcart> GetDiscountcartAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddDiscountcart", ReplyAction="http://tempuri.org/IIhaleService/AddDiscountcartResponse")]
        void AddDiscountcart(IM.DataLayer.discountcart entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddDiscountcart", ReplyAction="http://tempuri.org/IIhaleService/AddDiscountcartResponse")]
        System.Threading.Tasks.Task AddDiscountcartAsync(IM.DataLayer.discountcart entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveDiscountcart", ReplyAction="http://tempuri.org/IIhaleService/RemoveDiscountcartResponse")]
        void RemoveDiscountcart(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveDiscountcart", ReplyAction="http://tempuri.org/IIhaleService/RemoveDiscountcartResponse")]
        System.Threading.Tasks.Task RemoveDiscountcartAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateDiscountcart", ReplyAction="http://tempuri.org/IIhaleService/UpdateDiscountcartResponse")]
        void UpdateDiscountcart(IM.DataLayer.discountcart entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateDiscountcart", ReplyAction="http://tempuri.org/IIhaleService/UpdateDiscountcartResponse")]
        System.Threading.Tasks.Task UpdateDiscountcartAsync(IM.DataLayer.discountcart entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetE_Invoices", ReplyAction="http://tempuri.org/IIhaleService/GetE_InvoicesResponse")]
        System.Collections.Generic.List<IM.DataLayer.E_INVOICE> GetE_Invoices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetE_Invoices", ReplyAction="http://tempuri.org/IIhaleService/GetE_InvoicesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.E_INVOICE>> GetE_InvoicesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetE_Invoice", ReplyAction="http://tempuri.org/IIhaleService/GetE_InvoiceResponse")]
        IM.DataLayer.E_INVOICE GetE_Invoice(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetE_Invoice", ReplyAction="http://tempuri.org/IIhaleService/GetE_InvoiceResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.E_INVOICE> GetE_InvoiceAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddE_Invoice", ReplyAction="http://tempuri.org/IIhaleService/AddE_InvoiceResponse")]
        void AddE_Invoice(IM.DataLayer.E_INVOICE entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddE_Invoice", ReplyAction="http://tempuri.org/IIhaleService/AddE_InvoiceResponse")]
        System.Threading.Tasks.Task AddE_InvoiceAsync(IM.DataLayer.E_INVOICE entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveE_Invoice", ReplyAction="http://tempuri.org/IIhaleService/RemoveE_InvoiceResponse")]
        void RemoveE_Invoice(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveE_Invoice", ReplyAction="http://tempuri.org/IIhaleService/RemoveE_InvoiceResponse")]
        System.Threading.Tasks.Task RemoveE_InvoiceAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateE_Invoice", ReplyAction="http://tempuri.org/IIhaleService/UpdateE_InvoiceResponse")]
        void UpdateE_Invoice(IM.DataLayer.E_INVOICE entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateE_Invoice", ReplyAction="http://tempuri.org/IIhaleService/UpdateE_InvoiceResponse")]
        System.Threading.Tasks.Task UpdateE_InvoiceAsync(IM.DataLayer.E_INVOICE entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetE_invoice_types", ReplyAction="http://tempuri.org/IIhaleService/GetE_invoice_typesResponse")]
        System.Collections.Generic.List<IM.DataLayer.E_invoice_type> GetE_invoice_types();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetE_invoice_types", ReplyAction="http://tempuri.org/IIhaleService/GetE_invoice_typesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.E_invoice_type>> GetE_invoice_typesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetE_invoice_type", ReplyAction="http://tempuri.org/IIhaleService/GetE_invoice_typeResponse")]
        IM.DataLayer.E_invoice_type GetE_invoice_type(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetE_invoice_type", ReplyAction="http://tempuri.org/IIhaleService/GetE_invoice_typeResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.E_invoice_type> GetE_invoice_typeAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddE_invoice_type", ReplyAction="http://tempuri.org/IIhaleService/AddE_invoice_typeResponse")]
        void AddE_invoice_type(IM.DataLayer.E_invoice_type entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddE_invoice_type", ReplyAction="http://tempuri.org/IIhaleService/AddE_invoice_typeResponse")]
        System.Threading.Tasks.Task AddE_invoice_typeAsync(IM.DataLayer.E_invoice_type entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveE_invoice_type", ReplyAction="http://tempuri.org/IIhaleService/RemoveE_invoice_typeResponse")]
        void RemoveE_invoice_type(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveE_invoice_type", ReplyAction="http://tempuri.org/IIhaleService/RemoveE_invoice_typeResponse")]
        System.Threading.Tasks.Task RemoveE_invoice_typeAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateE_invoice_type", ReplyAction="http://tempuri.org/IIhaleService/UpdateE_invoice_typeResponse")]
        void UpdateE_invoice_type(IM.DataLayer.E_invoice_type entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateE_invoice_type", ReplyAction="http://tempuri.org/IIhaleService/UpdateE_invoice_typeResponse")]
        System.Threading.Tasks.Task UpdateE_invoice_typeAsync(IM.DataLayer.E_invoice_type entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetEmployees", ReplyAction="http://tempuri.org/IIhaleService/GetEmployeesResponse")]
        System.Collections.Generic.List<IM.DataLayer.employee> GetEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetEmployees", ReplyAction="http://tempuri.org/IIhaleService/GetEmployeesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.employee>> GetEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetEmployee", ReplyAction="http://tempuri.org/IIhaleService/GetEmployeeResponse")]
        IM.DataLayer.employee GetEmployee(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetEmployee", ReplyAction="http://tempuri.org/IIhaleService/GetEmployeeResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.employee> GetEmployeeAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddEmployee", ReplyAction="http://tempuri.org/IIhaleService/AddEmployeeResponse")]
        void AddEmployee(IM.DataLayer.employee entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddEmployee", ReplyAction="http://tempuri.org/IIhaleService/AddEmployeeResponse")]
        System.Threading.Tasks.Task AddEmployeeAsync(IM.DataLayer.employee entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveEmployee", ReplyAction="http://tempuri.org/IIhaleService/RemoveEmployeeResponse")]
        void RemoveEmployee(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveEmployee", ReplyAction="http://tempuri.org/IIhaleService/RemoveEmployeeResponse")]
        System.Threading.Tasks.Task RemoveEmployeeAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateEmployee", ReplyAction="http://tempuri.org/IIhaleService/UpdateEmployeeResponse")]
        void UpdateEmployee(IM.DataLayer.employee entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateEmployee", ReplyAction="http://tempuri.org/IIhaleService/UpdateEmployeeResponse")]
        System.Threading.Tasks.Task UpdateEmployeeAsync(IM.DataLayer.employee entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetFuelTypes", ReplyAction="http://tempuri.org/IIhaleService/GetFuelTypesResponse")]
        System.Collections.Generic.List<IM.DataLayer.FuelType> GetFuelTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetFuelTypes", ReplyAction="http://tempuri.org/IIhaleService/GetFuelTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.FuelType>> GetFuelTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetFuelType", ReplyAction="http://tempuri.org/IIhaleService/GetFuelTypeResponse")]
        IM.DataLayer.FuelType GetFuelType(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetFuelType", ReplyAction="http://tempuri.org/IIhaleService/GetFuelTypeResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.FuelType> GetFuelTypeAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddFuelType", ReplyAction="http://tempuri.org/IIhaleService/AddFuelTypeResponse")]
        void AddFuelType(IM.DataLayer.FuelType entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddFuelType", ReplyAction="http://tempuri.org/IIhaleService/AddFuelTypeResponse")]
        System.Threading.Tasks.Task AddFuelTypeAsync(IM.DataLayer.FuelType entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveFuelType", ReplyAction="http://tempuri.org/IIhaleService/RemoveFuelTypeResponse")]
        void RemoveFuelType(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveFuelType", ReplyAction="http://tempuri.org/IIhaleService/RemoveFuelTypeResponse")]
        System.Threading.Tasks.Task RemoveFuelTypeAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateFuelType", ReplyAction="http://tempuri.org/IIhaleService/UpdateFuelTypeResponse")]
        void UpdateFuelType(IM.DataLayer.FuelType entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateFuelType", ReplyAction="http://tempuri.org/IIhaleService/UpdateFuelTypeResponse")]
        System.Threading.Tasks.Task UpdateFuelTypeAsync(IM.DataLayer.FuelType entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetGearTypes", ReplyAction="http://tempuri.org/IIhaleService/GetGearTypesResponse")]
        System.Collections.Generic.List<IM.DataLayer.GearType> GetGearTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetGearTypes", ReplyAction="http://tempuri.org/IIhaleService/GetGearTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.GearType>> GetGearTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetGearType", ReplyAction="http://tempuri.org/IIhaleService/GetGearTypeResponse")]
        IM.DataLayer.GearType GetGearType(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetGearType", ReplyAction="http://tempuri.org/IIhaleService/GetGearTypeResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.GearType> GetGearTypeAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddGearType", ReplyAction="http://tempuri.org/IIhaleService/AddGearTypeResponse")]
        void AddGearType(IM.DataLayer.GearType entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddGearType", ReplyAction="http://tempuri.org/IIhaleService/AddGearTypeResponse")]
        System.Threading.Tasks.Task AddGearTypeAsync(IM.DataLayer.GearType entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveGearType", ReplyAction="http://tempuri.org/IIhaleService/RemoveGearTypeResponse")]
        void RemoveGearType(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveGearType", ReplyAction="http://tempuri.org/IIhaleService/RemoveGearTypeResponse")]
        System.Threading.Tasks.Task RemoveGearTypeAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateGearType", ReplyAction="http://tempuri.org/IIhaleService/UpdateGearTypeResponse")]
        void UpdateGearType(IM.DataLayer.GearType entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateGearType", ReplyAction="http://tempuri.org/IIhaleService/UpdateGearTypeResponse")]
        System.Threading.Tasks.Task UpdateGearTypeAsync(IM.DataLayer.GearType entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetGeneralDesignes", ReplyAction="http://tempuri.org/IIhaleService/GetGeneralDesignesResponse")]
        System.Collections.Generic.List<IM.DataLayer.GeneralDesign> GetGeneralDesignes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetGeneralDesignes", ReplyAction="http://tempuri.org/IIhaleService/GetGeneralDesignesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.GeneralDesign>> GetGeneralDesignesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetGeneralDesign", ReplyAction="http://tempuri.org/IIhaleService/GetGeneralDesignResponse")]
        IM.DataLayer.GeneralDesign GetGeneralDesign(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetGeneralDesign", ReplyAction="http://tempuri.org/IIhaleService/GetGeneralDesignResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.GeneralDesign> GetGeneralDesignAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddGeneralDesign", ReplyAction="http://tempuri.org/IIhaleService/AddGeneralDesignResponse")]
        void AddGeneralDesign(IM.DataLayer.GeneralDesign entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddGeneralDesign", ReplyAction="http://tempuri.org/IIhaleService/AddGeneralDesignResponse")]
        System.Threading.Tasks.Task AddGeneralDesignAsync(IM.DataLayer.GeneralDesign entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveGeneralDesign", ReplyAction="http://tempuri.org/IIhaleService/RemoveGeneralDesignResponse")]
        void RemoveGeneralDesign(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveGeneralDesign", ReplyAction="http://tempuri.org/IIhaleService/RemoveGeneralDesignResponse")]
        System.Threading.Tasks.Task RemoveGeneralDesignAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateGeneralDesign", ReplyAction="http://tempuri.org/IIhaleService/UpdateGeneralDesignResponse")]
        void UpdateGeneralDesign(IM.DataLayer.GeneralDesign entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateGeneralDesign", ReplyAction="http://tempuri.org/IIhaleService/UpdateGeneralDesignResponse")]
        System.Threading.Tasks.Task UpdateGeneralDesignAsync(IM.DataLayer.GeneralDesign entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetIcons", ReplyAction="http://tempuri.org/IIhaleService/GetIconsResponse")]
        System.Collections.Generic.List<IM.DataLayer.Icon> GetIcons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetIcons", ReplyAction="http://tempuri.org/IIhaleService/GetIconsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.Icon>> GetIconsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetIcon", ReplyAction="http://tempuri.org/IIhaleService/GetIconResponse")]
        IM.DataLayer.Icon GetIcon(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetIcon", ReplyAction="http://tempuri.org/IIhaleService/GetIconResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.Icon> GetIconAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddIcon", ReplyAction="http://tempuri.org/IIhaleService/AddIconResponse")]
        void AddIcon(IM.DataLayer.Icon entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddIcon", ReplyAction="http://tempuri.org/IIhaleService/AddIconResponse")]
        System.Threading.Tasks.Task AddIconAsync(IM.DataLayer.Icon entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveIcon", ReplyAction="http://tempuri.org/IIhaleService/RemoveIconResponse")]
        void RemoveIcon(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveIcon", ReplyAction="http://tempuri.org/IIhaleService/RemoveIconResponse")]
        System.Threading.Tasks.Task RemoveIconAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateIcon", ReplyAction="http://tempuri.org/IIhaleService/UpdateIconResponse")]
        void UpdateIcon(IM.DataLayer.Icon entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateIcon", ReplyAction="http://tempuri.org/IIhaleService/UpdateIconResponse")]
        System.Threading.Tasks.Task UpdateIconAsync(IM.DataLayer.Icon entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetImages", ReplyAction="http://tempuri.org/IIhaleService/GetImagesResponse")]
        System.Collections.Generic.List<IM.DataLayer.Image> GetImages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetImages", ReplyAction="http://tempuri.org/IIhaleService/GetImagesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.Image>> GetImagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetImage", ReplyAction="http://tempuri.org/IIhaleService/GetImageResponse")]
        IM.DataLayer.Image GetImage(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetImage", ReplyAction="http://tempuri.org/IIhaleService/GetImageResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.Image> GetImageAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddImage", ReplyAction="http://tempuri.org/IIhaleService/AddImageResponse")]
        void AddImage(IM.DataLayer.Image entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddImage", ReplyAction="http://tempuri.org/IIhaleService/AddImageResponse")]
        System.Threading.Tasks.Task AddImageAsync(IM.DataLayer.Image entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveImage", ReplyAction="http://tempuri.org/IIhaleService/RemoveImageResponse")]
        void RemoveImage(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveImage", ReplyAction="http://tempuri.org/IIhaleService/RemoveImageResponse")]
        System.Threading.Tasks.Task RemoveImageAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateImage", ReplyAction="http://tempuri.org/IIhaleService/UpdateImageResponse")]
        void UpdateImage(IM.DataLayer.Image entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateImage", ReplyAction="http://tempuri.org/IIhaleService/UpdateImageResponse")]
        System.Threading.Tasks.Task UpdateImageAsync(IM.DataLayer.Image entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetMediums", ReplyAction="http://tempuri.org/IIhaleService/GetMediumsResponse")]
        System.Collections.Generic.List<IM.DataLayer.medium> GetMediums();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetMediums", ReplyAction="http://tempuri.org/IIhaleService/GetMediumsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.medium>> GetMediumsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetMedium", ReplyAction="http://tempuri.org/IIhaleService/GetMediumResponse")]
        IM.DataLayer.medium GetMedium(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetMedium", ReplyAction="http://tempuri.org/IIhaleService/GetMediumResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.medium> GetMediumAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddMedium", ReplyAction="http://tempuri.org/IIhaleService/AddMediumResponse")]
        void AddMedium(IM.DataLayer.medium entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddMedium", ReplyAction="http://tempuri.org/IIhaleService/AddMediumResponse")]
        System.Threading.Tasks.Task AddMediumAsync(IM.DataLayer.medium entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveMedium", ReplyAction="http://tempuri.org/IIhaleService/RemoveMediumResponse")]
        void RemoveMedium(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveMedium", ReplyAction="http://tempuri.org/IIhaleService/RemoveMediumResponse")]
        System.Threading.Tasks.Task RemoveMediumAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateMedium", ReplyAction="http://tempuri.org/IIhaleService/UpdateMediumResponse")]
        void UpdateMedium(IM.DataLayer.medium entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateMedium", ReplyAction="http://tempuri.org/IIhaleService/UpdateMediumResponse")]
        System.Threading.Tasks.Task UpdateMediumAsync(IM.DataLayer.medium entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetMenus", ReplyAction="http://tempuri.org/IIhaleService/GetMenusResponse")]
        System.Collections.Generic.List<IM.DataLayer.Menu> GetMenus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetMenus", ReplyAction="http://tempuri.org/IIhaleService/GetMenusResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.Menu>> GetMenusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/SubMenu", ReplyAction="http://tempuri.org/IIhaleService/SubMenuResponse")]
        System.Collections.Generic.List<IM.DataLayer.Menu> SubMenu(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/SubMenu", ReplyAction="http://tempuri.org/IIhaleService/SubMenuResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.Menu>> SubMenuAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/MainMenu", ReplyAction="http://tempuri.org/IIhaleService/MainMenuResponse")]
        System.Text.StringBuilder MainMenu();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/MainMenu", ReplyAction="http://tempuri.org/IIhaleService/MainMenuResponse")]
        System.Threading.Tasks.Task<System.Text.StringBuilder> MainMenuAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/SubCategory", ReplyAction="http://tempuri.org/IIhaleService/SubCategoryResponse")]
        void SubCategory(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/SubCategory", ReplyAction="http://tempuri.org/IIhaleService/SubCategoryResponse")]
        System.Threading.Tasks.Task SubCategoryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetMenu", ReplyAction="http://tempuri.org/IIhaleService/GetMenuResponse")]
        IM.DataLayer.Menu GetMenu(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetMenu", ReplyAction="http://tempuri.org/IIhaleService/GetMenuResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.Menu> GetMenuAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddMenu", ReplyAction="http://tempuri.org/IIhaleService/AddMenuResponse")]
        void AddMenu(IM.DataLayer.Menu entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddMenu", ReplyAction="http://tempuri.org/IIhaleService/AddMenuResponse")]
        System.Threading.Tasks.Task AddMenuAsync(IM.DataLayer.Menu entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveMenu", ReplyAction="http://tempuri.org/IIhaleService/RemoveMenuResponse")]
        void RemoveMenu(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveMenu", ReplyAction="http://tempuri.org/IIhaleService/RemoveMenuResponse")]
        System.Threading.Tasks.Task RemoveMenuAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateMenu", ReplyAction="http://tempuri.org/IIhaleService/UpdateMenuResponse")]
        void UpdateMenu(IM.DataLayer.Menu entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateMenu", ReplyAction="http://tempuri.org/IIhaleService/UpdateMenuResponse")]
        System.Threading.Tasks.Task UpdateMenuAsync(IM.DataLayer.Menu entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetNatifications", ReplyAction="http://tempuri.org/IIhaleService/GetNatificationsResponse")]
        System.Collections.Generic.List<IM.DataLayer.natification> GetNatifications();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetNatifications", ReplyAction="http://tempuri.org/IIhaleService/GetNatificationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.natification>> GetNatificationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/toplama", ReplyAction="http://tempuri.org/IIhaleService/toplamaResponse")]
        string toplama(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/toplama", ReplyAction="http://tempuri.org/IIhaleService/toplamaResponse")]
        System.Threading.Tasks.Task<string> toplamaAsync(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Getuserproducts", ReplyAction="http://tempuri.org/IIhaleService/GetuserproductsResponse")]
        System.Collections.Generic.List<IM.DataLayer.userproduct> Getuserproducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Getuserproducts", ReplyAction="http://tempuri.org/IIhaleService/GetuserproductsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.userproduct>> GetuserproductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Getuserproduct", ReplyAction="http://tempuri.org/IIhaleService/GetuserproductResponse")]
        IM.DataLayer.userproduct Getuserproduct(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Getuserproduct", ReplyAction="http://tempuri.org/IIhaleService/GetuserproductResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.userproduct> GetuserproductAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Adduserproduct", ReplyAction="http://tempuri.org/IIhaleService/AdduserproductResponse")]
        void Adduserproduct(IM.DataLayer.userproduct entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Adduserproduct", ReplyAction="http://tempuri.org/IIhaleService/AdduserproductResponse")]
        System.Threading.Tasks.Task AdduserproductAsync(IM.DataLayer.userproduct entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Removeuserproduct", ReplyAction="http://tempuri.org/IIhaleService/RemoveuserproductResponse")]
        void Removeuserproduct(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Removeuserproduct", ReplyAction="http://tempuri.org/IIhaleService/RemoveuserproductResponse")]
        System.Threading.Tasks.Task RemoveuserproductAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Updateuserproduct", ReplyAction="http://tempuri.org/IIhaleService/UpdateuserproductResponse")]
        void Updateuserproduct(IM.DataLayer.userproduct entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Updateuserproduct", ReplyAction="http://tempuri.org/IIhaleService/UpdateuserproductResponse")]
        System.Threading.Tasks.Task UpdateuserproductAsync(IM.DataLayer.userproduct entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Getactionusers", ReplyAction="http://tempuri.org/IIhaleService/GetactionusersResponse")]
        System.Collections.Generic.List<IM.DataLayer.actionuser> Getactionusers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Getactionusers", ReplyAction="http://tempuri.org/IIhaleService/GetactionusersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.actionuser>> GetactionusersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Getactionuser", ReplyAction="http://tempuri.org/IIhaleService/GetactionuserResponse")]
        IM.DataLayer.actionuser Getactionuser(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Getactionuser", ReplyAction="http://tempuri.org/IIhaleService/GetactionuserResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.actionuser> GetactionuserAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Addactionuser", ReplyAction="http://tempuri.org/IIhaleService/AddactionuserResponse")]
        void Addactionuser(IM.DataLayer.actionuser entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Addactionuser", ReplyAction="http://tempuri.org/IIhaleService/AddactionuserResponse")]
        System.Threading.Tasks.Task AddactionuserAsync(IM.DataLayer.actionuser entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Removeactionuser", ReplyAction="http://tempuri.org/IIhaleService/RemoveactionuserResponse")]
        void Removeactionuser(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Removeactionuser", ReplyAction="http://tempuri.org/IIhaleService/RemoveactionuserResponse")]
        System.Threading.Tasks.Task RemoveactionuserAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Updateactionuser", ReplyAction="http://tempuri.org/IIhaleService/UpdateactionuserResponse")]
        void Updateactionuser(IM.DataLayer.actionuser entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Updateactionuser", ReplyAction="http://tempuri.org/IIhaleService/UpdateactionuserResponse")]
        System.Threading.Tasks.Task UpdateactionuserAsync(IM.DataLayer.actionuser entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Getprivateauctions", ReplyAction="http://tempuri.org/IIhaleService/GetprivateauctionsResponse")]
        System.Collections.Generic.List<IM.DataLayer.private_auction> Getprivateauctions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Getprivateauctions", ReplyAction="http://tempuri.org/IIhaleService/GetprivateauctionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.private_auction>> GetprivateauctionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Getprivateauction", ReplyAction="http://tempuri.org/IIhaleService/GetprivateauctionResponse")]
        IM.DataLayer.private_auction Getprivateauction(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Getprivateauction", ReplyAction="http://tempuri.org/IIhaleService/GetprivateauctionResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.private_auction> GetprivateauctionAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Addprivateauction", ReplyAction="http://tempuri.org/IIhaleService/AddprivateauctionResponse")]
        void Addprivateauction(IM.DataLayer.private_auction entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Addprivateauction", ReplyAction="http://tempuri.org/IIhaleService/AddprivateauctionResponse")]
        System.Threading.Tasks.Task AddprivateauctionAsync(IM.DataLayer.private_auction entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Removeprivateauction", ReplyAction="http://tempuri.org/IIhaleService/RemoveprivateauctionResponse")]
        void Removeprivateauction(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Removeprivateauction", ReplyAction="http://tempuri.org/IIhaleService/RemoveprivateauctionResponse")]
        System.Threading.Tasks.Task RemoveprivateauctionAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Updateprivateauction", ReplyAction="http://tempuri.org/IIhaleService/UpdateprivateauctionResponse")]
        void Updateprivateauction(IM.DataLayer.private_auction entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/Updateprivateauction", ReplyAction="http://tempuri.org/IIhaleService/UpdateprivateauctionResponse")]
        System.Threading.Tasks.Task UpdateprivateauctionAsync(IM.DataLayer.private_auction entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetLogs", ReplyAction="http://tempuri.org/IIhaleService/GetLogsResponse")]
        System.Collections.Generic.List<IM.DataLayer.Log> GetLogs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetLogs", ReplyAction="http://tempuri.org/IIhaleService/GetLogsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.Log>> GetLogsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetLog", ReplyAction="http://tempuri.org/IIhaleService/GetLogResponse")]
        IM.DataLayer.Log GetLog(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetLog", ReplyAction="http://tempuri.org/IIhaleService/GetLogResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.Log> GetLogAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddLog", ReplyAction="http://tempuri.org/IIhaleService/AddLogResponse")]
        void AddLog(IM.DataLayer.Log entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddLog", ReplyAction="http://tempuri.org/IIhaleService/AddLogResponse")]
        System.Threading.Tasks.Task AddLogAsync(IM.DataLayer.Log entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveLog", ReplyAction="http://tempuri.org/IIhaleService/RemoveLogResponse")]
        void RemoveLog(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveLog", ReplyAction="http://tempuri.org/IIhaleService/RemoveLogResponse")]
        System.Threading.Tasks.Task RemoveLogAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateLog", ReplyAction="http://tempuri.org/IIhaleService/UpdateLogResponse")]
        void UpdateLog(IM.DataLayer.Log entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateLog", ReplyAction="http://tempuri.org/IIhaleService/UpdateLogResponse")]
        System.Threading.Tasks.Task UpdateLogAsync(IM.DataLayer.Log entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetLogInfoes", ReplyAction="http://tempuri.org/IIhaleService/GetLogInfoesResponse")]
        System.Collections.Generic.List<IM.DataLayer.LogInfo> GetLogInfoes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetLogInfoes", ReplyAction="http://tempuri.org/IIhaleService/GetLogInfoesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.LogInfo>> GetLogInfoesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetLogInfo", ReplyAction="http://tempuri.org/IIhaleService/GetLogInfoResponse")]
        IM.DataLayer.LogInfo GetLogInfo(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetLogInfo", ReplyAction="http://tempuri.org/IIhaleService/GetLogInfoResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.LogInfo> GetLogInfoAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddLogInfo", ReplyAction="http://tempuri.org/IIhaleService/AddLogInfoResponse")]
        void AddLogInfo(IM.DataLayer.LogInfo entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddLogInfo", ReplyAction="http://tempuri.org/IIhaleService/AddLogInfoResponse")]
        System.Threading.Tasks.Task AddLogInfoAsync(IM.DataLayer.LogInfo entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveLogInfo", ReplyAction="http://tempuri.org/IIhaleService/RemoveLogInfoResponse")]
        void RemoveLogInfo(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveLogInfo", ReplyAction="http://tempuri.org/IIhaleService/RemoveLogInfoResponse")]
        System.Threading.Tasks.Task RemoveLogInfoAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateLogInfo", ReplyAction="http://tempuri.org/IIhaleService/UpdateLogInfoResponse")]
        void UpdateLogInfo(IM.DataLayer.LogInfo entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateLogInfo", ReplyAction="http://tempuri.org/IIhaleService/UpdateLogInfoResponse")]
        System.Threading.Tasks.Task UpdateLogInfoAsync(IM.DataLayer.LogInfo entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetLogStatusAll", ReplyAction="http://tempuri.org/IIhaleService/GetLogStatusAllResponse")]
        System.Collections.Generic.List<IM.DataLayer.LogStatus> GetLogStatusAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetLogStatusAll", ReplyAction="http://tempuri.org/IIhaleService/GetLogStatusAllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.LogStatus>> GetLogStatusAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetLogStatus", ReplyAction="http://tempuri.org/IIhaleService/GetLogStatusResponse")]
        IM.DataLayer.LogStatus GetLogStatus(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetLogStatus", ReplyAction="http://tempuri.org/IIhaleService/GetLogStatusResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.LogStatus> GetLogStatusAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddLogStatus", ReplyAction="http://tempuri.org/IIhaleService/AddLogStatusResponse")]
        void AddLogStatus(IM.DataLayer.LogStatus entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddLogStatus", ReplyAction="http://tempuri.org/IIhaleService/AddLogStatusResponse")]
        System.Threading.Tasks.Task AddLogStatusAsync(IM.DataLayer.LogStatus entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveLogStatus", ReplyAction="http://tempuri.org/IIhaleService/RemoveLogStatusResponse")]
        void RemoveLogStatus(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveLogStatus", ReplyAction="http://tempuri.org/IIhaleService/RemoveLogStatusResponse")]
        System.Threading.Tasks.Task RemoveLogStatusAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateLogStatus", ReplyAction="http://tempuri.org/IIhaleService/UpdateLogStatusResponse")]
        void UpdateLogStatus(IM.DataLayer.LogStatus entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateLogStatus", ReplyAction="http://tempuri.org/IIhaleService/UpdateLogStatusResponse")]
        System.Threading.Tasks.Task UpdateLogStatusAsync(IM.DataLayer.LogStatus entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetsAmountofIncrease", ReplyAction="http://tempuri.org/IIhaleService/GetsAmountofIncreaseResponse")]
        System.Collections.Generic.List<IM.DataLayer.AMOUNT_OF_INCREASE> GetsAmountofIncrease();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetsAmountofIncrease", ReplyAction="http://tempuri.org/IIhaleService/GetsAmountofIncreaseResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.AMOUNT_OF_INCREASE>> GetsAmountofIncreaseAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetAmountofIncrease", ReplyAction="http://tempuri.org/IIhaleService/GetAmountofIncreaseResponse")]
        IM.DataLayer.AMOUNT_OF_INCREASE GetAmountofIncrease(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetAmountofIncrease", ReplyAction="http://tempuri.org/IIhaleService/GetAmountofIncreaseResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.AMOUNT_OF_INCREASE> GetAmountofIncreaseAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddAmountofIncrease", ReplyAction="http://tempuri.org/IIhaleService/AddAmountofIncreaseResponse")]
        void AddAmountofIncrease(IM.DataLayer.AMOUNT_OF_INCREASE entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddAmountofIncrease", ReplyAction="http://tempuri.org/IIhaleService/AddAmountofIncreaseResponse")]
        System.Threading.Tasks.Task AddAmountofIncreaseAsync(IM.DataLayer.AMOUNT_OF_INCREASE entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveAmountofIncrease", ReplyAction="http://tempuri.org/IIhaleService/RemoveAmountofIncreaseResponse")]
        void RemoveAmountofIncrease(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveAmountofIncrease", ReplyAction="http://tempuri.org/IIhaleService/RemoveAmountofIncreaseResponse")]
        System.Threading.Tasks.Task RemoveAmountofIncreaseAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateAmountofIncrease", ReplyAction="http://tempuri.org/IIhaleService/UpdateAmountofIncreaseResponse")]
        void UpdateAmountofIncrease(IM.DataLayer.AMOUNT_OF_INCREASE entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateAmountofIncrease", ReplyAction="http://tempuri.org/IIhaleService/UpdateAmountofIncreaseResponse")]
        System.Threading.Tasks.Task UpdateAmountofIncreaseAsync(IM.DataLayer.AMOUNT_OF_INCREASE entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetAuctions", ReplyAction="http://tempuri.org/IIhaleService/GetAuctionsResponse")]
        System.Collections.Generic.List<IM.DataLayer.auction> GetAuctions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetAuctions", ReplyAction="http://tempuri.org/IIhaleService/GetAuctionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.auction>> GetAuctionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetAuction", ReplyAction="http://tempuri.org/IIhaleService/GetAuctionResponse")]
        IM.DataLayer.auction GetAuction(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetAuction", ReplyAction="http://tempuri.org/IIhaleService/GetAuctionResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.auction> GetAuctionAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddAuction", ReplyAction="http://tempuri.org/IIhaleService/AddAuctionResponse")]
        void AddAuction(IM.DataLayer.auction entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddAuction", ReplyAction="http://tempuri.org/IIhaleService/AddAuctionResponse")]
        System.Threading.Tasks.Task AddAuctionAsync(IM.DataLayer.auction entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveAuction", ReplyAction="http://tempuri.org/IIhaleService/RemoveAuctionResponse")]
        void RemoveAuction(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveAuction", ReplyAction="http://tempuri.org/IIhaleService/RemoveAuctionResponse")]
        System.Threading.Tasks.Task RemoveAuctionAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateAuction", ReplyAction="http://tempuri.org/IIhaleService/UpdateAuctionResponse")]
        void UpdateAuction(IM.DataLayer.auction entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateAuction", ReplyAction="http://tempuri.org/IIhaleService/UpdateAuctionResponse")]
        System.Threading.Tasks.Task UpdateAuctionAsync(IM.DataLayer.auction entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetBanks", ReplyAction="http://tempuri.org/IIhaleService/GetBanksResponse")]
        System.Collections.Generic.List<IM.DataLayer.bank> GetBanks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetBanks", ReplyAction="http://tempuri.org/IIhaleService/GetBanksResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.bank>> GetBanksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetBank", ReplyAction="http://tempuri.org/IIhaleService/GetBankResponse")]
        IM.DataLayer.bank GetBank(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetBank", ReplyAction="http://tempuri.org/IIhaleService/GetBankResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.bank> GetBankAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddBank", ReplyAction="http://tempuri.org/IIhaleService/AddBankResponse")]
        void AddBank(IM.DataLayer.bank entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddBank", ReplyAction="http://tempuri.org/IIhaleService/AddBankResponse")]
        System.Threading.Tasks.Task AddBankAsync(IM.DataLayer.bank entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveBank", ReplyAction="http://tempuri.org/IIhaleService/RemoveBankResponse")]
        void RemoveBank(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveBank", ReplyAction="http://tempuri.org/IIhaleService/RemoveBankResponse")]
        System.Threading.Tasks.Task RemoveBankAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateBank", ReplyAction="http://tempuri.org/IIhaleService/UpdateBankResponse")]
        void UpdateBank(IM.DataLayer.bank entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateBank", ReplyAction="http://tempuri.org/IIhaleService/UpdateBankResponse")]
        System.Threading.Tasks.Task UpdateBankAsync(IM.DataLayer.bank entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCarBrands", ReplyAction="http://tempuri.org/IIhaleService/GetCarBrandsResponse")]
        System.Collections.Generic.List<IM.DataLayer.CarBrand> GetCarBrands();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCarBrands", ReplyAction="http://tempuri.org/IIhaleService/GetCarBrandsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.CarBrand>> GetCarBrandsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCarBrand", ReplyAction="http://tempuri.org/IIhaleService/GetCarBrandResponse")]
        IM.DataLayer.CarBrand GetCarBrand(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCarBrand", ReplyAction="http://tempuri.org/IIhaleService/GetCarBrandResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.CarBrand> GetCarBrandAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddCarBrand", ReplyAction="http://tempuri.org/IIhaleService/AddCarBrandResponse")]
        void AddCarBrand(IM.DataLayer.CarBrand entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddCarBrand", ReplyAction="http://tempuri.org/IIhaleService/AddCarBrandResponse")]
        System.Threading.Tasks.Task AddCarBrandAsync(IM.DataLayer.CarBrand entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveCarBrand", ReplyAction="http://tempuri.org/IIhaleService/RemoveCarBrandResponse")]
        void RemoveCarBrand(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveCarBrand", ReplyAction="http://tempuri.org/IIhaleService/RemoveCarBrandResponse")]
        System.Threading.Tasks.Task RemoveCarBrandAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateCarBrand", ReplyAction="http://tempuri.org/IIhaleService/UpdateCarBrandResponse")]
        void UpdateCarBrand(IM.DataLayer.CarBrand entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateCarBrand", ReplyAction="http://tempuri.org/IIhaleService/UpdateCarBrandResponse")]
        System.Threading.Tasks.Task UpdateCarBrandAsync(IM.DataLayer.CarBrand entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCarDetails", ReplyAction="http://tempuri.org/IIhaleService/GetCarDetailsResponse")]
        System.Collections.Generic.List<IM.DataLayer.CarDetail> GetCarDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCarDetails", ReplyAction="http://tempuri.org/IIhaleService/GetCarDetailsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.CarDetail>> GetCarDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCarDetail", ReplyAction="http://tempuri.org/IIhaleService/GetCarDetailResponse")]
        IM.DataLayer.CarDetail GetCarDetail(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCarDetail", ReplyAction="http://tempuri.org/IIhaleService/GetCarDetailResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.CarDetail> GetCarDetailAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddCarDetail", ReplyAction="http://tempuri.org/IIhaleService/AddCarDetailResponse")]
        void AddCarDetail(IM.DataLayer.CarDetail entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddCarDetail", ReplyAction="http://tempuri.org/IIhaleService/AddCarDetailResponse")]
        System.Threading.Tasks.Task AddCarDetailAsync(IM.DataLayer.CarDetail entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveCarDetail", ReplyAction="http://tempuri.org/IIhaleService/RemoveCarDetailResponse")]
        void RemoveCarDetail(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveCarDetail", ReplyAction="http://tempuri.org/IIhaleService/RemoveCarDetailResponse")]
        System.Threading.Tasks.Task RemoveCarDetailAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateCarDetail", ReplyAction="http://tempuri.org/IIhaleService/UpdateCarDetailResponse")]
        void UpdateCarDetail(IM.DataLayer.CarDetail entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateCarDetail", ReplyAction="http://tempuri.org/IIhaleService/UpdateCarDetailResponse")]
        System.Threading.Tasks.Task UpdateCarDetailAsync(IM.DataLayer.CarDetail entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCarHardwareDetails", ReplyAction="http://tempuri.org/IIhaleService/GetCarHardwareDetailsResponse")]
        System.Collections.Generic.List<IM.DataLayer.CarHardwareDetail> GetCarHardwareDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCarHardwareDetails", ReplyAction="http://tempuri.org/IIhaleService/GetCarHardwareDetailsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.CarHardwareDetail>> GetCarHardwareDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCarHardwareDetail", ReplyAction="http://tempuri.org/IIhaleService/GetCarHardwareDetailResponse")]
        IM.DataLayer.CarHardwareDetail GetCarHardwareDetail(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCarHardwareDetail", ReplyAction="http://tempuri.org/IIhaleService/GetCarHardwareDetailResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.CarHardwareDetail> GetCarHardwareDetailAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddCarHardwareDetail", ReplyAction="http://tempuri.org/IIhaleService/AddCarHardwareDetailResponse")]
        void AddCarHardwareDetail(IM.DataLayer.CarHardwareDetail entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddCarHardwareDetail", ReplyAction="http://tempuri.org/IIhaleService/AddCarHardwareDetailResponse")]
        System.Threading.Tasks.Task AddCarHardwareDetailAsync(IM.DataLayer.CarHardwareDetail entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveCarHardwareDetail", ReplyAction="http://tempuri.org/IIhaleService/RemoveCarHardwareDetailResponse")]
        void RemoveCarHardwareDetail(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveCarHardwareDetail", ReplyAction="http://tempuri.org/IIhaleService/RemoveCarHardwareDetailResponse")]
        System.Threading.Tasks.Task RemoveCarHardwareDetailAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateCarHardwareDetail", ReplyAction="http://tempuri.org/IIhaleService/UpdateCarHardwareDetailResponse")]
        void UpdateCarHardwareDetail(IM.DataLayer.CarHardwareDetail entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateCarHardwareDetail", ReplyAction="http://tempuri.org/IIhaleService/UpdateCarHardwareDetailResponse")]
        System.Threading.Tasks.Task UpdateCarHardwareDetailAsync(IM.DataLayer.CarHardwareDetail entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCarMakes", ReplyAction="http://tempuri.org/IIhaleService/GetCarMakesResponse")]
        System.Collections.Generic.List<IM.DataLayer.CarMake> GetCarMakes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCarMakes", ReplyAction="http://tempuri.org/IIhaleService/GetCarMakesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.CarMake>> GetCarMakesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCarMake", ReplyAction="http://tempuri.org/IIhaleService/GetCarMakeResponse")]
        IM.DataLayer.CarMake GetCarMake(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCarMake", ReplyAction="http://tempuri.org/IIhaleService/GetCarMakeResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.CarMake> GetCarMakeAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddCarMake", ReplyAction="http://tempuri.org/IIhaleService/AddCarMakeResponse")]
        void AddCarMake(IM.DataLayer.CarMake entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddCarMake", ReplyAction="http://tempuri.org/IIhaleService/AddCarMakeResponse")]
        System.Threading.Tasks.Task AddCarMakeAsync(IM.DataLayer.CarMake entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveCarMake", ReplyAction="http://tempuri.org/IIhaleService/RemoveCarMakeResponse")]
        void RemoveCarMake(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveCarMake", ReplyAction="http://tempuri.org/IIhaleService/RemoveCarMakeResponse")]
        System.Threading.Tasks.Task RemoveCarMakeAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateCarMake", ReplyAction="http://tempuri.org/IIhaleService/UpdateCarMakeResponse")]
        void UpdateCarMake(IM.DataLayer.CarMake entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateCarMake", ReplyAction="http://tempuri.org/IIhaleService/UpdateCarMakeResponse")]
        System.Threading.Tasks.Task UpdateCarMakeAsync(IM.DataLayer.CarMake entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCarTechnicalDetails", ReplyAction="http://tempuri.org/IIhaleService/GetCarTechnicalDetailsResponse")]
        System.Collections.Generic.List<IM.DataLayer.CarTechnicalDetail> GetCarTechnicalDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCarTechnicalDetails", ReplyAction="http://tempuri.org/IIhaleService/GetCarTechnicalDetailsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.CarTechnicalDetail>> GetCarTechnicalDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCarTechnicalDetail", ReplyAction="http://tempuri.org/IIhaleService/GetCarTechnicalDetailResponse")]
        IM.DataLayer.CarTechnicalDetail GetCarTechnicalDetail(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCarTechnicalDetail", ReplyAction="http://tempuri.org/IIhaleService/GetCarTechnicalDetailResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.CarTechnicalDetail> GetCarTechnicalDetailAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddCarTechnicalDetail", ReplyAction="http://tempuri.org/IIhaleService/AddCarTechnicalDetailResponse")]
        void AddCarTechnicalDetail(IM.DataLayer.CarTechnicalDetail entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddCarTechnicalDetail", ReplyAction="http://tempuri.org/IIhaleService/AddCarTechnicalDetailResponse")]
        System.Threading.Tasks.Task AddCarTechnicalDetailAsync(IM.DataLayer.CarTechnicalDetail entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveCarTechnicalDetail", ReplyAction="http://tempuri.org/IIhaleService/RemoveCarTechnicalDetailResponse")]
        void RemoveCarTechnicalDetail(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveCarTechnicalDetail", ReplyAction="http://tempuri.org/IIhaleService/RemoveCarTechnicalDetailResponse")]
        System.Threading.Tasks.Task RemoveCarTechnicalDetailAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateCarTechnicalDetail", ReplyAction="http://tempuri.org/IIhaleService/UpdateCarTechnicalDetailResponse")]
        void UpdateCarTechnicalDetail(IM.DataLayer.CarTechnicalDetail entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateCarTechnicalDetail", ReplyAction="http://tempuri.org/IIhaleService/UpdateCarTechnicalDetailResponse")]
        System.Threading.Tasks.Task UpdateCarTechnicalDetailAsync(IM.DataLayer.CarTechnicalDetail entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCities", ReplyAction="http://tempuri.org/IIhaleService/GetCitiesResponse")]
        System.Collections.Generic.List<IM.DataLayer.city> GetCities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCities", ReplyAction="http://tempuri.org/IIhaleService/GetCitiesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.city>> GetCitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCity", ReplyAction="http://tempuri.org/IIhaleService/GetCityResponse")]
        IM.DataLayer.city GetCity(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetCity", ReplyAction="http://tempuri.org/IIhaleService/GetCityResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.city> GetCityAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddCity", ReplyAction="http://tempuri.org/IIhaleService/AddCityResponse")]
        void AddCity(IM.DataLayer.city entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddCity", ReplyAction="http://tempuri.org/IIhaleService/AddCityResponse")]
        System.Threading.Tasks.Task AddCityAsync(IM.DataLayer.city entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveCity", ReplyAction="http://tempuri.org/IIhaleService/RemoveCityResponse")]
        void RemoveCity(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveCity", ReplyAction="http://tempuri.org/IIhaleService/RemoveCityResponse")]
        System.Threading.Tasks.Task RemoveCityAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateCity", ReplyAction="http://tempuri.org/IIhaleService/UpdateCityResponse")]
        void UpdateCity(IM.DataLayer.city entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateCity", ReplyAction="http://tempuri.org/IIhaleService/UpdateCityResponse")]
        System.Threading.Tasks.Task UpdateCityAsync(IM.DataLayer.city entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetClaims", ReplyAction="http://tempuri.org/IIhaleService/GetClaimsResponse")]
        System.Collections.Generic.List<IM.DataLayer.Claim> GetClaims();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetClaims", ReplyAction="http://tempuri.org/IIhaleService/GetClaimsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.Claim>> GetClaimsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetClaim", ReplyAction="http://tempuri.org/IIhaleService/GetClaimResponse")]
        IM.DataLayer.Claim GetClaim(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetClaim", ReplyAction="http://tempuri.org/IIhaleService/GetClaimResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.Claim> GetClaimAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddClaim", ReplyAction="http://tempuri.org/IIhaleService/AddClaimResponse")]
        void AddClaim(IM.DataLayer.Claim entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddClaim", ReplyAction="http://tempuri.org/IIhaleService/AddClaimResponse")]
        System.Threading.Tasks.Task AddClaimAsync(IM.DataLayer.Claim entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveClaim", ReplyAction="http://tempuri.org/IIhaleService/RemoveClaimResponse")]
        void RemoveClaim(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveClaim", ReplyAction="http://tempuri.org/IIhaleService/RemoveClaimResponse")]
        System.Threading.Tasks.Task RemoveClaimAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateClaim", ReplyAction="http://tempuri.org/IIhaleService/UpdateClaimResponse")]
        void UpdateClaim(IM.DataLayer.Claim entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/UpdateClaim", ReplyAction="http://tempuri.org/IIhaleService/UpdateClaimResponse")]
        System.Threading.Tasks.Task UpdateClaimAsync(IM.DataLayer.Claim entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetAllColor", ReplyAction="http://tempuri.org/IIhaleService/GetAllColorResponse")]
        System.Collections.Generic.List<IM.DataLayer.Color> GetAllColor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetAllColor", ReplyAction="http://tempuri.org/IIhaleService/GetAllColorResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.Color>> GetAllColorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetColor", ReplyAction="http://tempuri.org/IIhaleService/GetColorResponse")]
        IM.DataLayer.Color GetColor(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/GetColor", ReplyAction="http://tempuri.org/IIhaleService/GetColorResponse")]
        System.Threading.Tasks.Task<IM.DataLayer.Color> GetColorAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddColor", ReplyAction="http://tempuri.org/IIhaleService/AddColorResponse")]
        void AddColor(IM.DataLayer.Color entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/AddColor", ReplyAction="http://tempuri.org/IIhaleService/AddColorResponse")]
        System.Threading.Tasks.Task AddColorAsync(IM.DataLayer.Color entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveColor", ReplyAction="http://tempuri.org/IIhaleService/RemoveColorResponse")]
        void RemoveColor(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIhaleService/RemoveColor", ReplyAction="http://tempuri.org/IIhaleService/RemoveColorResponse")]
        System.Threading.Tasks.Task RemoveColorAsync(int Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIhaleServiceChannel : IM.PresentationLayer.IhaleWCFService.IIhaleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IhaleServiceClient : System.ServiceModel.ClientBase<IM.PresentationLayer.IhaleWCFService.IIhaleService>, IM.PresentationLayer.IhaleWCFService.IIhaleService {
        
        public IhaleServiceClient() {
        }
        
        public IhaleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IhaleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IhaleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IhaleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public IM.DataLayer.User GetUser(int Id) {
            return base.Channel.GetUser(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.User> GetUserAsync(int Id) {
            return base.Channel.GetUserAsync(Id);
        }
        
        public void AddUser(IM.DataLayer.User entity) {
            base.Channel.AddUser(entity);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(IM.DataLayer.User entity) {
            return base.Channel.AddUserAsync(entity);
        }
        
        public void RemoveUser(int Id) {
            base.Channel.RemoveUser(Id);
        }
        
        public System.Threading.Tasks.Task RemoveUserAsync(int Id) {
            return base.Channel.RemoveUserAsync(Id);
        }
        
        public void UpdateUser(IM.DataLayer.User entity) {
            base.Channel.UpdateUser(entity);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(IM.DataLayer.User entity) {
            return base.Channel.UpdateUserAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.UserRole> GetUserRoles() {
            return base.Channel.GetUserRoles();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.UserRole>> GetUserRolesAsync() {
            return base.Channel.GetUserRolesAsync();
        }
        
        public IM.DataLayer.UserRole GetUserRole(int Id) {
            return base.Channel.GetUserRole(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.UserRole> GetUserRoleAsync(int Id) {
            return base.Channel.GetUserRoleAsync(Id);
        }
        
        public void AddUserRole(IM.DataLayer.UserRole entity) {
            base.Channel.AddUserRole(entity);
        }
        
        public System.Threading.Tasks.Task AddUserRoleAsync(IM.DataLayer.UserRole entity) {
            return base.Channel.AddUserRoleAsync(entity);
        }
        
        public void RemoveUserRole(int Id) {
            base.Channel.RemoveUserRole(Id);
        }
        
        public System.Threading.Tasks.Task RemoveUserRoleAsync(int Id) {
            return base.Channel.RemoveUserRoleAsync(Id);
        }
        
        public void UpdateUserRole(IM.DataLayer.UserRole entity) {
            base.Channel.UpdateUserRole(entity);
        }
        
        public System.Threading.Tasks.Task UpdateUserRoleAsync(IM.DataLayer.UserRole entity) {
            return base.Channel.UpdateUserRoleAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.UserType> GetUserTypes() {
            return base.Channel.GetUserTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.UserType>> GetUserTypesAsync() {
            return base.Channel.GetUserTypesAsync();
        }
        
        public IM.DataLayer.UserType GetUserType(int Id) {
            return base.Channel.GetUserType(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.UserType> GetUserTypeAsync(int Id) {
            return base.Channel.GetUserTypeAsync(Id);
        }
        
        public void AddUserType(IM.DataLayer.UserType entity) {
            base.Channel.AddUserType(entity);
        }
        
        public System.Threading.Tasks.Task AddUserTypeAsync(IM.DataLayer.UserType entity) {
            return base.Channel.AddUserTypeAsync(entity);
        }
        
        public void RemoveUserType(int Id) {
            base.Channel.RemoveUserType(Id);
        }
        
        public System.Threading.Tasks.Task RemoveUserTypeAsync(int Id) {
            return base.Channel.RemoveUserTypeAsync(Id);
        }
        
        public void UpdateUserType(IM.DataLayer.UserType entity) {
            base.Channel.UpdateUserType(entity);
        }
        
        public System.Threading.Tasks.Task UpdateUserTypeAsync(IM.DataLayer.UserType entity) {
            return base.Channel.UpdateUserTypeAsync(entity);
        }
        
        public IM.DataLayer.natification GetNatification(int Id) {
            return base.Channel.GetNatification(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.natification> GetNatificationAsync(int Id) {
            return base.Channel.GetNatificationAsync(Id);
        }
        
        public void AddNatification(IM.DataLayer.natification entity) {
            base.Channel.AddNatification(entity);
        }
        
        public System.Threading.Tasks.Task AddNatificationAsync(IM.DataLayer.natification entity) {
            return base.Channel.AddNatificationAsync(entity);
        }
        
        public void RemoveNatification(int Id) {
            base.Channel.RemoveNatification(Id);
        }
        
        public System.Threading.Tasks.Task RemoveNatificationAsync(int Id) {
            return base.Channel.RemoveNatificationAsync(Id);
        }
        
        public void UpdateNatification(IM.DataLayer.natification entity) {
            base.Channel.UpdateNatification(entity);
        }
        
        public System.Threading.Tasks.Task UpdateNatificationAsync(IM.DataLayer.natification entity) {
            return base.Channel.UpdateNatificationAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.odeme_yontemi> Getodeme_yontemleri() {
            return base.Channel.Getodeme_yontemleri();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.odeme_yontemi>> Getodeme_yontemleriAsync() {
            return base.Channel.Getodeme_yontemleriAsync();
        }
        
        public IM.DataLayer.odeme_yontemi GetOdemeYontemi(int Id) {
            return base.Channel.GetOdemeYontemi(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.odeme_yontemi> GetOdemeYontemiAsync(int Id) {
            return base.Channel.GetOdemeYontemiAsync(Id);
        }
        
        public void AddOdemeYontemi(IM.DataLayer.odeme_yontemi entity) {
            base.Channel.AddOdemeYontemi(entity);
        }
        
        public System.Threading.Tasks.Task AddOdemeYontemiAsync(IM.DataLayer.odeme_yontemi entity) {
            return base.Channel.AddOdemeYontemiAsync(entity);
        }
        
        public void RemoveOdemeYontemi(int Id) {
            base.Channel.RemoveOdemeYontemi(Id);
        }
        
        public System.Threading.Tasks.Task RemoveOdemeYontemiAsync(int Id) {
            return base.Channel.RemoveOdemeYontemiAsync(Id);
        }
        
        public void UpdateOdemeYontemi(IM.DataLayer.odeme_yontemi entity) {
            base.Channel.UpdateOdemeYontemi(entity);
        }
        
        public System.Threading.Tasks.Task UpdateOdemeYontemiAsync(IM.DataLayer.odeme_yontemi entity) {
            return base.Channel.UpdateOdemeYontemiAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.payment_plan> GetPaymentPlans() {
            return base.Channel.GetPaymentPlans();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.payment_plan>> GetPaymentPlansAsync() {
            return base.Channel.GetPaymentPlansAsync();
        }
        
        public IM.DataLayer.payment_plan GetPaymentPlan(int Id) {
            return base.Channel.GetPaymentPlan(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.payment_plan> GetPaymentPlanAsync(int Id) {
            return base.Channel.GetPaymentPlanAsync(Id);
        }
        
        public void AddPaymentPlan(IM.DataLayer.payment_plan entity) {
            base.Channel.AddPaymentPlan(entity);
        }
        
        public System.Threading.Tasks.Task AddPaymentPlanAsync(IM.DataLayer.payment_plan entity) {
            return base.Channel.AddPaymentPlanAsync(entity);
        }
        
        public void RemovePaymentPlan(int Id) {
            base.Channel.RemovePaymentPlan(Id);
        }
        
        public System.Threading.Tasks.Task RemovePaymentPlanAsync(int Id) {
            return base.Channel.RemovePaymentPlanAsync(Id);
        }
        
        public void UpdatePaymentPlan(IM.DataLayer.payment_plan entity) {
            base.Channel.UpdatePaymentPlan(entity);
        }
        
        public System.Threading.Tasks.Task UpdatePaymentPlanAsync(IM.DataLayer.payment_plan entity) {
            return base.Channel.UpdatePaymentPlanAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.Post> GetPosts() {
            return base.Channel.GetPosts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.Post>> GetPostsAsync() {
            return base.Channel.GetPostsAsync();
        }
        
        public IM.DataLayer.Post GetPost(int Id) {
            return base.Channel.GetPost(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.Post> GetPostAsync(int Id) {
            return base.Channel.GetPostAsync(Id);
        }
        
        public void AddPost(IM.DataLayer.Post entity) {
            base.Channel.AddPost(entity);
        }
        
        public System.Threading.Tasks.Task AddPostAsync(IM.DataLayer.Post entity) {
            return base.Channel.AddPostAsync(entity);
        }
        
        public void RemovePost(int Id) {
            base.Channel.RemovePost(Id);
        }
        
        public System.Threading.Tasks.Task RemovePostAsync(int Id) {
            return base.Channel.RemovePostAsync(Id);
        }
        
        public void UpdatePost(IM.DataLayer.Post entity) {
            base.Channel.UpdatePost(entity);
        }
        
        public System.Threading.Tasks.Task UpdatePostAsync(IM.DataLayer.Post entity) {
            return base.Channel.UpdatePostAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.PRICEBOT> GetPricebots() {
            return base.Channel.GetPricebots();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.PRICEBOT>> GetPricebotsAsync() {
            return base.Channel.GetPricebotsAsync();
        }
        
        public IM.DataLayer.PRICEBOT GetPricebot(int Id) {
            return base.Channel.GetPricebot(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.PRICEBOT> GetPricebotAsync(int Id) {
            return base.Channel.GetPricebotAsync(Id);
        }
        
        public void AddPricebot(IM.DataLayer.PRICEBOT entity) {
            base.Channel.AddPricebot(entity);
        }
        
        public System.Threading.Tasks.Task AddPricebotAsync(IM.DataLayer.PRICEBOT entity) {
            return base.Channel.AddPricebotAsync(entity);
        }
        
        public void RemovePricebot(int Id) {
            base.Channel.RemovePricebot(Id);
        }
        
        public System.Threading.Tasks.Task RemovePricebotAsync(int Id) {
            return base.Channel.RemovePricebotAsync(Id);
        }
        
        public void UpdatePricebot(IM.DataLayer.PRICEBOT entity) {
            base.Channel.UpdatePricebot(entity);
        }
        
        public System.Threading.Tasks.Task UpdatePricebotAsync(IM.DataLayer.PRICEBOT entity) {
            return base.Channel.UpdatePricebotAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.Role> GetRoles() {
            return base.Channel.GetRoles();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.Role>> GetRolesAsync() {
            return base.Channel.GetRolesAsync();
        }
        
        public IM.DataLayer.Role GetRole(int Id) {
            return base.Channel.GetRole(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.Role> GetRoleAsync(int Id) {
            return base.Channel.GetRoleAsync(Id);
        }
        
        public void AddRole(IM.DataLayer.Role entity) {
            base.Channel.AddRole(entity);
        }
        
        public System.Threading.Tasks.Task AddRoleAsync(IM.DataLayer.Role entity) {
            return base.Channel.AddRoleAsync(entity);
        }
        
        public void RemoveRole(int Id) {
            base.Channel.RemoveRole(Id);
        }
        
        public System.Threading.Tasks.Task RemoveRoleAsync(int Id) {
            return base.Channel.RemoveRoleAsync(Id);
        }
        
        public void UpdateRole(IM.DataLayer.Role entity) {
            base.Channel.UpdateRole(entity);
        }
        
        public System.Threading.Tasks.Task UpdateRoleAsync(IM.DataLayer.Role entity) {
            return base.Channel.UpdateRoleAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.RoleClaim> GetRoleClaims() {
            return base.Channel.GetRoleClaims();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.RoleClaim>> GetRoleClaimsAsync() {
            return base.Channel.GetRoleClaimsAsync();
        }
        
        public IM.DataLayer.RoleClaim GetRoleClaim(int Id) {
            return base.Channel.GetRoleClaim(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.RoleClaim> GetRoleClaimAsync(int Id) {
            return base.Channel.GetRoleClaimAsync(Id);
        }
        
        public void AddRoleClaim(IM.DataLayer.RoleClaim entity) {
            base.Channel.AddRoleClaim(entity);
        }
        
        public System.Threading.Tasks.Task AddRoleClaimAsync(IM.DataLayer.RoleClaim entity) {
            return base.Channel.AddRoleClaimAsync(entity);
        }
        
        public void RemoveRoleClaim(int Id) {
            base.Channel.RemoveRoleClaim(Id);
        }
        
        public System.Threading.Tasks.Task RemoveRoleClaimAsync(int Id) {
            return base.Channel.RemoveRoleClaimAsync(Id);
        }
        
        public void UpdateRoleClaim(IM.DataLayer.RoleClaim entity) {
            base.Channel.UpdateRoleClaim(entity);
        }
        
        public System.Threading.Tasks.Task UpdateRoleClaimAsync(IM.DataLayer.RoleClaim entity) {
            return base.Channel.UpdateRoleClaimAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.Segment> GetSegments() {
            return base.Channel.GetSegments();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.Segment>> GetSegmentsAsync() {
            return base.Channel.GetSegmentsAsync();
        }
        
        public IM.DataLayer.Segment GetSegment(int Id) {
            return base.Channel.GetSegment(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.Segment> GetSegmentAsync(int Id) {
            return base.Channel.GetSegmentAsync(Id);
        }
        
        public void AddSegment(IM.DataLayer.Segment entity) {
            base.Channel.AddSegment(entity);
        }
        
        public System.Threading.Tasks.Task AddSegmentAsync(IM.DataLayer.Segment entity) {
            return base.Channel.AddSegmentAsync(entity);
        }
        
        public void RemoveSegment(int Id) {
            base.Channel.RemoveSegment(Id);
        }
        
        public System.Threading.Tasks.Task RemoveSegmentAsync(int Id) {
            return base.Channel.RemoveSegmentAsync(Id);
        }
        
        public void UpdateSegment(IM.DataLayer.Segment entity) {
            base.Channel.UpdateSegment(entity);
        }
        
        public System.Threading.Tasks.Task UpdateSegmentAsync(IM.DataLayer.Segment entity) {
            return base.Channel.UpdateSegmentAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.senaryo> GetSenarios() {
            return base.Channel.GetSenarios();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.senaryo>> GetSenariosAsync() {
            return base.Channel.GetSenariosAsync();
        }
        
        public IM.DataLayer.senaryo GetSenario(int Id) {
            return base.Channel.GetSenario(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.senaryo> GetSenarioAsync(int Id) {
            return base.Channel.GetSenarioAsync(Id);
        }
        
        public void AddSenario(IM.DataLayer.senaryo entity) {
            base.Channel.AddSenario(entity);
        }
        
        public System.Threading.Tasks.Task AddSenarioAsync(IM.DataLayer.senaryo entity) {
            return base.Channel.AddSenarioAsync(entity);
        }
        
        public void RemoveSenario(int Id) {
            base.Channel.RemoveSenario(Id);
        }
        
        public System.Threading.Tasks.Task RemoveSenarioAsync(int Id) {
            return base.Channel.RemoveSenarioAsync(Id);
        }
        
        public void UpdateSenario(IM.DataLayer.senaryo entity) {
            base.Channel.UpdateSenario(entity);
        }
        
        public System.Threading.Tasks.Task UpdateSenarioAsync(IM.DataLayer.senaryo entity) {
            return base.Channel.UpdateSenarioAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.SocialMedya> GetSocialMedias() {
            return base.Channel.GetSocialMedias();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.SocialMedya>> GetSocialMediasAsync() {
            return base.Channel.GetSocialMediasAsync();
        }
        
        public IM.DataLayer.SocialMedya GetSocialMedia(int Id) {
            return base.Channel.GetSocialMedia(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.SocialMedya> GetSocialMediaAsync(int Id) {
            return base.Channel.GetSocialMediaAsync(Id);
        }
        
        public void AddSocialMedia(IM.DataLayer.SocialMedya entity) {
            base.Channel.AddSocialMedia(entity);
        }
        
        public System.Threading.Tasks.Task AddSocialMediaAsync(IM.DataLayer.SocialMedya entity) {
            return base.Channel.AddSocialMediaAsync(entity);
        }
        
        public void RemoveSocialMedia(int Id) {
            base.Channel.RemoveSocialMedia(Id);
        }
        
        public System.Threading.Tasks.Task RemoveSocialMediaAsync(int Id) {
            return base.Channel.RemoveSocialMediaAsync(Id);
        }
        
        public void UpdateSocialMedia(IM.DataLayer.SocialMedya entity) {
            base.Channel.UpdateSocialMedia(entity);
        }
        
        public System.Threading.Tasks.Task UpdateSocialMediaAsync(IM.DataLayer.SocialMedya entity) {
            return base.Channel.UpdateSocialMediaAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.SOLD_PRODUCT> GetSoldProducts() {
            return base.Channel.GetSoldProducts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.SOLD_PRODUCT>> GetSoldProductsAsync() {
            return base.Channel.GetSoldProductsAsync();
        }
        
        public IM.DataLayer.SOLD_PRODUCT GetSoldProduct(int Id) {
            return base.Channel.GetSoldProduct(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.SOLD_PRODUCT> GetSoldProductAsync(int Id) {
            return base.Channel.GetSoldProductAsync(Id);
        }
        
        public void AddSoldProduct(IM.DataLayer.SOLD_PRODUCT entity) {
            base.Channel.AddSoldProduct(entity);
        }
        
        public System.Threading.Tasks.Task AddSoldProductAsync(IM.DataLayer.SOLD_PRODUCT entity) {
            return base.Channel.AddSoldProductAsync(entity);
        }
        
        public void RemoveSoldProduct(int Id) {
            base.Channel.RemoveSoldProduct(Id);
        }
        
        public System.Threading.Tasks.Task RemoveSoldProductAsync(int Id) {
            return base.Channel.RemoveSoldProductAsync(Id);
        }
        
        public void UpdateSoldProduct(IM.DataLayer.SOLD_PRODUCT entity) {
            base.Channel.UpdateSoldProduct(entity);
        }
        
        public System.Threading.Tasks.Task UpdateSoldProductAsync(IM.DataLayer.SOLD_PRODUCT entity) {
            return base.Channel.UpdateSoldProductAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.submit> GetSubmits() {
            return base.Channel.GetSubmits();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.submit>> GetSubmitsAsync() {
            return base.Channel.GetSubmitsAsync();
        }
        
        public IM.DataLayer.submit GetSubmit(int Id) {
            return base.Channel.GetSubmit(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.submit> GetSubmitAsync(int Id) {
            return base.Channel.GetSubmitAsync(Id);
        }
        
        public void AddSubmit(IM.DataLayer.submit entity) {
            base.Channel.AddSubmit(entity);
        }
        
        public System.Threading.Tasks.Task AddSubmitAsync(IM.DataLayer.submit entity) {
            return base.Channel.AddSubmitAsync(entity);
        }
        
        public void RemoveSubmit(int Id) {
            base.Channel.RemoveSubmit(Id);
        }
        
        public System.Threading.Tasks.Task RemoveSubmitAsync(int Id) {
            return base.Channel.RemoveSubmitAsync(Id);
        }
        
        public void UpdateSubmit(IM.DataLayer.submit entity) {
            base.Channel.UpdateSubmit(entity);
        }
        
        public System.Threading.Tasks.Task UpdateSubmitAsync(IM.DataLayer.submit entity) {
            return base.Channel.UpdateSubmitAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.sysdiagram> GetSysdiagrams() {
            return base.Channel.GetSysdiagrams();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.sysdiagram>> GetSysdiagramsAsync() {
            return base.Channel.GetSysdiagramsAsync();
        }
        
        public IM.DataLayer.sysdiagram GetSysdiagram(int Id) {
            return base.Channel.GetSysdiagram(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.sysdiagram> GetSysdiagramAsync(int Id) {
            return base.Channel.GetSysdiagramAsync(Id);
        }
        
        public void AddSysdiagram(IM.DataLayer.sysdiagram entity) {
            base.Channel.AddSysdiagram(entity);
        }
        
        public System.Threading.Tasks.Task AddSysdiagramAsync(IM.DataLayer.sysdiagram entity) {
            return base.Channel.AddSysdiagramAsync(entity);
        }
        
        public void RemoveSysdiagram(int Id) {
            base.Channel.RemoveSysdiagram(Id);
        }
        
        public System.Threading.Tasks.Task RemoveSysdiagramAsync(int Id) {
            return base.Channel.RemoveSysdiagramAsync(Id);
        }
        
        public void UpdateSysdiagram(IM.DataLayer.sysdiagram entity) {
            base.Channel.UpdateSysdiagram(entity);
        }
        
        public System.Threading.Tasks.Task UpdateSysdiagramAsync(IM.DataLayer.sysdiagram entity) {
            return base.Channel.UpdateSysdiagramAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.tag> GetTags() {
            return base.Channel.GetTags();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.tag>> GetTagsAsync() {
            return base.Channel.GetTagsAsync();
        }
        
        public IM.DataLayer.tag GetTag(int Id) {
            return base.Channel.GetTag(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.tag> GetTagAsync(int Id) {
            return base.Channel.GetTagAsync(Id);
        }
        
        public void AddTag(IM.DataLayer.tag entity) {
            base.Channel.AddTag(entity);
        }
        
        public System.Threading.Tasks.Task AddTagAsync(IM.DataLayer.tag entity) {
            return base.Channel.AddTagAsync(entity);
        }
        
        public void RemoveTag(int Id) {
            base.Channel.RemoveTag(Id);
        }
        
        public System.Threading.Tasks.Task RemoveTagAsync(int Id) {
            return base.Channel.RemoveTagAsync(Id);
        }
        
        public void UpdateTag(IM.DataLayer.tag entity) {
            base.Channel.UpdateTag(entity);
        }
        
        public System.Threading.Tasks.Task UpdateTagAsync(IM.DataLayer.tag entity) {
            return base.Channel.UpdateTagAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.tag_post> GetTagPosts() {
            return base.Channel.GetTagPosts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.tag_post>> GetTagPostsAsync() {
            return base.Channel.GetTagPostsAsync();
        }
        
        public IM.DataLayer.tag_post GetTagPost(int Id) {
            return base.Channel.GetTagPost(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.tag_post> GetTagPostAsync(int Id) {
            return base.Channel.GetTagPostAsync(Id);
        }
        
        public void AddTagPost(IM.DataLayer.tag_post entity) {
            base.Channel.AddTagPost(entity);
        }
        
        public System.Threading.Tasks.Task AddTagPostAsync(IM.DataLayer.tag_post entity) {
            return base.Channel.AddTagPostAsync(entity);
        }
        
        public void RemoveTagPost(int Id) {
            base.Channel.RemoveTagPost(Id);
        }
        
        public System.Threading.Tasks.Task RemoveTagPostAsync(int Id) {
            return base.Channel.RemoveTagPostAsync(Id);
        }
        
        public void UpdateTagPost(IM.DataLayer.tag_post entity) {
            base.Channel.UpdateTagPost(entity);
        }
        
        public System.Threading.Tasks.Task UpdateTagPostAsync(IM.DataLayer.tag_post entity) {
            return base.Channel.UpdateTagPostAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.Tax_Administration> GetTax_Administrations() {
            return base.Channel.GetTax_Administrations();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.Tax_Administration>> GetTax_AdministrationsAsync() {
            return base.Channel.GetTax_AdministrationsAsync();
        }
        
        public IM.DataLayer.Tax_Administration GetTax_Administration(int Id) {
            return base.Channel.GetTax_Administration(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.Tax_Administration> GetTax_AdministrationAsync(int Id) {
            return base.Channel.GetTax_AdministrationAsync(Id);
        }
        
        public void AddTax_Administration(IM.DataLayer.Tax_Administration entity) {
            base.Channel.AddTax_Administration(entity);
        }
        
        public System.Threading.Tasks.Task AddTax_AdministrationAsync(IM.DataLayer.Tax_Administration entity) {
            return base.Channel.AddTax_AdministrationAsync(entity);
        }
        
        public void RemoveTax_Administration(int Id) {
            base.Channel.RemoveTax_Administration(Id);
        }
        
        public System.Threading.Tasks.Task RemoveTax_AdministrationAsync(int Id) {
            return base.Channel.RemoveTax_AdministrationAsync(Id);
        }
        
        public void UpdateTax_Administration(IM.DataLayer.Tax_Administration entity) {
            base.Channel.UpdateTax_Administration(entity);
        }
        
        public System.Threading.Tasks.Task UpdateTax_AdministrationAsync(IM.DataLayer.Tax_Administration entity) {
            return base.Channel.UpdateTax_AdministrationAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.title> GetTitles() {
            return base.Channel.GetTitles();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.title>> GetTitlesAsync() {
            return base.Channel.GetTitlesAsync();
        }
        
        public IM.DataLayer.title GetTitle(int Id) {
            return base.Channel.GetTitle(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.title> GetTitleAsync(int Id) {
            return base.Channel.GetTitleAsync(Id);
        }
        
        public void AddTitle(IM.DataLayer.title entity) {
            base.Channel.AddTitle(entity);
        }
        
        public System.Threading.Tasks.Task AddTitleAsync(IM.DataLayer.title entity) {
            return base.Channel.AddTitleAsync(entity);
        }
        
        public void RemoveTitle(int Id) {
            base.Channel.RemoveTitle(Id);
        }
        
        public System.Threading.Tasks.Task RemoveTitleAsync(int Id) {
            return base.Channel.RemoveTitleAsync(Id);
        }
        
        public void UpdateTitle(IM.DataLayer.title entity) {
            base.Channel.UpdateTitle(entity);
        }
        
        public System.Threading.Tasks.Task UpdateTitleAsync(IM.DataLayer.title entity) {
            return base.Channel.UpdateTitleAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.User> GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.User>> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public void UpdateColor(IM.DataLayer.Color entity) {
            base.Channel.UpdateColor(entity);
        }
        
        public System.Threading.Tasks.Task UpdateColorAsync(IM.DataLayer.Color entity) {
            return base.Channel.UpdateColorAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.company> GetCompanies() {
            return base.Channel.GetCompanies();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.company>> GetCompaniesAsync() {
            return base.Channel.GetCompaniesAsync();
        }
        
        public IM.DataLayer.company GetCompany(int Id) {
            return base.Channel.GetCompany(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.company> GetCompanyAsync(int Id) {
            return base.Channel.GetCompanyAsync(Id);
        }
        
        public void AddCompany(IM.DataLayer.company entity) {
            base.Channel.AddCompany(entity);
        }
        
        public System.Threading.Tasks.Task AddCompanyAsync(IM.DataLayer.company entity) {
            return base.Channel.AddCompanyAsync(entity);
        }
        
        public void RemoveCompany(int Id) {
            base.Channel.RemoveCompany(Id);
        }
        
        public System.Threading.Tasks.Task RemoveCompanyAsync(int Id) {
            return base.Channel.RemoveCompanyAsync(Id);
        }
        
        public void UpdateCompany(IM.DataLayer.company entity) {
            base.Channel.UpdateCompany(entity);
        }
        
        public System.Threading.Tasks.Task UpdateCompanyAsync(IM.DataLayer.company entity) {
            return base.Channel.UpdateCompanyAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.company_type> GetCompanyTypies() {
            return base.Channel.GetCompanyTypies();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.company_type>> GetCompanyTypiesAsync() {
            return base.Channel.GetCompanyTypiesAsync();
        }
        
        public IM.DataLayer.company_type GetCompanyType(int Id) {
            return base.Channel.GetCompanyType(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.company_type> GetCompanyTypeAsync(int Id) {
            return base.Channel.GetCompanyTypeAsync(Id);
        }
        
        public void AddCompanyType(IM.DataLayer.company_type entity) {
            base.Channel.AddCompanyType(entity);
        }
        
        public System.Threading.Tasks.Task AddCompanyTypeAsync(IM.DataLayer.company_type entity) {
            return base.Channel.AddCompanyTypeAsync(entity);
        }
        
        public void RemoveCompanyType(int Id) {
            base.Channel.RemoveCompanyType(Id);
        }
        
        public System.Threading.Tasks.Task RemoveCompanyTypeAsync(int Id) {
            return base.Channel.RemoveCompanyTypeAsync(Id);
        }
        
        public void UpdateCompanyType(IM.DataLayer.company_type entity) {
            base.Channel.UpdateCompanyType(entity);
        }
        
        public System.Threading.Tasks.Task UpdateCompanyTypeAsync(IM.DataLayer.company_type entity) {
            return base.Channel.UpdateCompanyTypeAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.country> GetCountries() {
            return base.Channel.GetCountries();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.country>> GetCountriesAsync() {
            return base.Channel.GetCountriesAsync();
        }
        
        public IM.DataLayer.country GetCountry(int Id) {
            return base.Channel.GetCountry(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.country> GetCountryAsync(int Id) {
            return base.Channel.GetCountryAsync(Id);
        }
        
        public void AddCountry(IM.DataLayer.country entity) {
            base.Channel.AddCountry(entity);
        }
        
        public System.Threading.Tasks.Task AddCountryAsync(IM.DataLayer.country entity) {
            return base.Channel.AddCountryAsync(entity);
        }
        
        public void RemoveCountry(int Id) {
            base.Channel.RemoveCountry(Id);
        }
        
        public System.Threading.Tasks.Task RemoveCountryAsync(int Id) {
            return base.Channel.RemoveCountryAsync(Id);
        }
        
        public void UpdateCountry(IM.DataLayer.country entity) {
            base.Channel.UpdateCountry(entity);
        }
        
        public System.Threading.Tasks.Task UpdateCountryAsync(IM.DataLayer.country entity) {
            return base.Channel.UpdateCountryAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.county> GetCounties() {
            return base.Channel.GetCounties();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.county>> GetCountiesAsync() {
            return base.Channel.GetCountiesAsync();
        }
        
        public IM.DataLayer.county GetCounty(int Id) {
            return base.Channel.GetCounty(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.county> GetCountyAsync(int Id) {
            return base.Channel.GetCountyAsync(Id);
        }
        
        public void AddCounty(IM.DataLayer.county entity) {
            base.Channel.AddCounty(entity);
        }
        
        public System.Threading.Tasks.Task AddCountyAsync(IM.DataLayer.county entity) {
            return base.Channel.AddCountyAsync(entity);
        }
        
        public void RemoveCounty(int Id) {
            base.Channel.RemoveCounty(Id);
        }
        
        public System.Threading.Tasks.Task RemoveCountyAsync(int Id) {
            return base.Channel.RemoveCountyAsync(Id);
        }
        
        public void UpdateCounty(IM.DataLayer.county entity) {
            base.Channel.UpdateCounty(entity);
        }
        
        public System.Threading.Tasks.Task UpdateCountyAsync(IM.DataLayer.county entity) {
            return base.Channel.UpdateCountyAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.CURRENCY> GetCurrencies() {
            return base.Channel.GetCurrencies();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.CURRENCY>> GetCurrenciesAsync() {
            return base.Channel.GetCurrenciesAsync();
        }
        
        public IM.DataLayer.CURRENCY GetCurrency(int Id) {
            return base.Channel.GetCurrency(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.CURRENCY> GetCurrencyAsync(int Id) {
            return base.Channel.GetCurrencyAsync(Id);
        }
        
        public void AddCurrency(IM.DataLayer.CURRENCY entity) {
            base.Channel.AddCurrency(entity);
        }
        
        public System.Threading.Tasks.Task AddCurrencyAsync(IM.DataLayer.CURRENCY entity) {
            return base.Channel.AddCurrencyAsync(entity);
        }
        
        public void RemoveCurrency(int Id) {
            base.Channel.RemoveCurrency(Id);
        }
        
        public System.Threading.Tasks.Task RemoveCurrencyAsync(int Id) {
            return base.Channel.RemoveCurrencyAsync(Id);
        }
        
        public void UpdateCurrency(IM.DataLayer.CURRENCY entity) {
            base.Channel.UpdateCurrency(entity);
        }
        
        public System.Threading.Tasks.Task UpdateCurrencyAsync(IM.DataLayer.CURRENCY entity) {
            return base.Channel.UpdateCurrencyAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.discountcart> GetDiscountcarts() {
            return base.Channel.GetDiscountcarts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.discountcart>> GetDiscountcartsAsync() {
            return base.Channel.GetDiscountcartsAsync();
        }
        
        public IM.DataLayer.discountcart GetDiscountcart(int Id) {
            return base.Channel.GetDiscountcart(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.discountcart> GetDiscountcartAsync(int Id) {
            return base.Channel.GetDiscountcartAsync(Id);
        }
        
        public void AddDiscountcart(IM.DataLayer.discountcart entity) {
            base.Channel.AddDiscountcart(entity);
        }
        
        public System.Threading.Tasks.Task AddDiscountcartAsync(IM.DataLayer.discountcart entity) {
            return base.Channel.AddDiscountcartAsync(entity);
        }
        
        public void RemoveDiscountcart(int Id) {
            base.Channel.RemoveDiscountcart(Id);
        }
        
        public System.Threading.Tasks.Task RemoveDiscountcartAsync(int Id) {
            return base.Channel.RemoveDiscountcartAsync(Id);
        }
        
        public void UpdateDiscountcart(IM.DataLayer.discountcart entity) {
            base.Channel.UpdateDiscountcart(entity);
        }
        
        public System.Threading.Tasks.Task UpdateDiscountcartAsync(IM.DataLayer.discountcart entity) {
            return base.Channel.UpdateDiscountcartAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.E_INVOICE> GetE_Invoices() {
            return base.Channel.GetE_Invoices();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.E_INVOICE>> GetE_InvoicesAsync() {
            return base.Channel.GetE_InvoicesAsync();
        }
        
        public IM.DataLayer.E_INVOICE GetE_Invoice(int Id) {
            return base.Channel.GetE_Invoice(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.E_INVOICE> GetE_InvoiceAsync(int Id) {
            return base.Channel.GetE_InvoiceAsync(Id);
        }
        
        public void AddE_Invoice(IM.DataLayer.E_INVOICE entity) {
            base.Channel.AddE_Invoice(entity);
        }
        
        public System.Threading.Tasks.Task AddE_InvoiceAsync(IM.DataLayer.E_INVOICE entity) {
            return base.Channel.AddE_InvoiceAsync(entity);
        }
        
        public void RemoveE_Invoice(int Id) {
            base.Channel.RemoveE_Invoice(Id);
        }
        
        public System.Threading.Tasks.Task RemoveE_InvoiceAsync(int Id) {
            return base.Channel.RemoveE_InvoiceAsync(Id);
        }
        
        public void UpdateE_Invoice(IM.DataLayer.E_INVOICE entity) {
            base.Channel.UpdateE_Invoice(entity);
        }
        
        public System.Threading.Tasks.Task UpdateE_InvoiceAsync(IM.DataLayer.E_INVOICE entity) {
            return base.Channel.UpdateE_InvoiceAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.E_invoice_type> GetE_invoice_types() {
            return base.Channel.GetE_invoice_types();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.E_invoice_type>> GetE_invoice_typesAsync() {
            return base.Channel.GetE_invoice_typesAsync();
        }
        
        public IM.DataLayer.E_invoice_type GetE_invoice_type(int Id) {
            return base.Channel.GetE_invoice_type(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.E_invoice_type> GetE_invoice_typeAsync(int Id) {
            return base.Channel.GetE_invoice_typeAsync(Id);
        }
        
        public void AddE_invoice_type(IM.DataLayer.E_invoice_type entity) {
            base.Channel.AddE_invoice_type(entity);
        }
        
        public System.Threading.Tasks.Task AddE_invoice_typeAsync(IM.DataLayer.E_invoice_type entity) {
            return base.Channel.AddE_invoice_typeAsync(entity);
        }
        
        public void RemoveE_invoice_type(int Id) {
            base.Channel.RemoveE_invoice_type(Id);
        }
        
        public System.Threading.Tasks.Task RemoveE_invoice_typeAsync(int Id) {
            return base.Channel.RemoveE_invoice_typeAsync(Id);
        }
        
        public void UpdateE_invoice_type(IM.DataLayer.E_invoice_type entity) {
            base.Channel.UpdateE_invoice_type(entity);
        }
        
        public System.Threading.Tasks.Task UpdateE_invoice_typeAsync(IM.DataLayer.E_invoice_type entity) {
            return base.Channel.UpdateE_invoice_typeAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.employee> GetEmployees() {
            return base.Channel.GetEmployees();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.employee>> GetEmployeesAsync() {
            return base.Channel.GetEmployeesAsync();
        }
        
        public IM.DataLayer.employee GetEmployee(int Id) {
            return base.Channel.GetEmployee(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.employee> GetEmployeeAsync(int Id) {
            return base.Channel.GetEmployeeAsync(Id);
        }
        
        public void AddEmployee(IM.DataLayer.employee entity) {
            base.Channel.AddEmployee(entity);
        }
        
        public System.Threading.Tasks.Task AddEmployeeAsync(IM.DataLayer.employee entity) {
            return base.Channel.AddEmployeeAsync(entity);
        }
        
        public void RemoveEmployee(int Id) {
            base.Channel.RemoveEmployee(Id);
        }
        
        public System.Threading.Tasks.Task RemoveEmployeeAsync(int Id) {
            return base.Channel.RemoveEmployeeAsync(Id);
        }
        
        public void UpdateEmployee(IM.DataLayer.employee entity) {
            base.Channel.UpdateEmployee(entity);
        }
        
        public System.Threading.Tasks.Task UpdateEmployeeAsync(IM.DataLayer.employee entity) {
            return base.Channel.UpdateEmployeeAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.FuelType> GetFuelTypes() {
            return base.Channel.GetFuelTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.FuelType>> GetFuelTypesAsync() {
            return base.Channel.GetFuelTypesAsync();
        }
        
        public IM.DataLayer.FuelType GetFuelType(int Id) {
            return base.Channel.GetFuelType(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.FuelType> GetFuelTypeAsync(int Id) {
            return base.Channel.GetFuelTypeAsync(Id);
        }
        
        public void AddFuelType(IM.DataLayer.FuelType entity) {
            base.Channel.AddFuelType(entity);
        }
        
        public System.Threading.Tasks.Task AddFuelTypeAsync(IM.DataLayer.FuelType entity) {
            return base.Channel.AddFuelTypeAsync(entity);
        }
        
        public void RemoveFuelType(int Id) {
            base.Channel.RemoveFuelType(Id);
        }
        
        public System.Threading.Tasks.Task RemoveFuelTypeAsync(int Id) {
            return base.Channel.RemoveFuelTypeAsync(Id);
        }
        
        public void UpdateFuelType(IM.DataLayer.FuelType entity) {
            base.Channel.UpdateFuelType(entity);
        }
        
        public System.Threading.Tasks.Task UpdateFuelTypeAsync(IM.DataLayer.FuelType entity) {
            return base.Channel.UpdateFuelTypeAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.GearType> GetGearTypes() {
            return base.Channel.GetGearTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.GearType>> GetGearTypesAsync() {
            return base.Channel.GetGearTypesAsync();
        }
        
        public IM.DataLayer.GearType GetGearType(int Id) {
            return base.Channel.GetGearType(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.GearType> GetGearTypeAsync(int Id) {
            return base.Channel.GetGearTypeAsync(Id);
        }
        
        public void AddGearType(IM.DataLayer.GearType entity) {
            base.Channel.AddGearType(entity);
        }
        
        public System.Threading.Tasks.Task AddGearTypeAsync(IM.DataLayer.GearType entity) {
            return base.Channel.AddGearTypeAsync(entity);
        }
        
        public void RemoveGearType(int Id) {
            base.Channel.RemoveGearType(Id);
        }
        
        public System.Threading.Tasks.Task RemoveGearTypeAsync(int Id) {
            return base.Channel.RemoveGearTypeAsync(Id);
        }
        
        public void UpdateGearType(IM.DataLayer.GearType entity) {
            base.Channel.UpdateGearType(entity);
        }
        
        public System.Threading.Tasks.Task UpdateGearTypeAsync(IM.DataLayer.GearType entity) {
            return base.Channel.UpdateGearTypeAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.GeneralDesign> GetGeneralDesignes() {
            return base.Channel.GetGeneralDesignes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.GeneralDesign>> GetGeneralDesignesAsync() {
            return base.Channel.GetGeneralDesignesAsync();
        }
        
        public IM.DataLayer.GeneralDesign GetGeneralDesign(int Id) {
            return base.Channel.GetGeneralDesign(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.GeneralDesign> GetGeneralDesignAsync(int Id) {
            return base.Channel.GetGeneralDesignAsync(Id);
        }
        
        public void AddGeneralDesign(IM.DataLayer.GeneralDesign entity) {
            base.Channel.AddGeneralDesign(entity);
        }
        
        public System.Threading.Tasks.Task AddGeneralDesignAsync(IM.DataLayer.GeneralDesign entity) {
            return base.Channel.AddGeneralDesignAsync(entity);
        }
        
        public void RemoveGeneralDesign(int Id) {
            base.Channel.RemoveGeneralDesign(Id);
        }
        
        public System.Threading.Tasks.Task RemoveGeneralDesignAsync(int Id) {
            return base.Channel.RemoveGeneralDesignAsync(Id);
        }
        
        public void UpdateGeneralDesign(IM.DataLayer.GeneralDesign entity) {
            base.Channel.UpdateGeneralDesign(entity);
        }
        
        public System.Threading.Tasks.Task UpdateGeneralDesignAsync(IM.DataLayer.GeneralDesign entity) {
            return base.Channel.UpdateGeneralDesignAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.Icon> GetIcons() {
            return base.Channel.GetIcons();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.Icon>> GetIconsAsync() {
            return base.Channel.GetIconsAsync();
        }
        
        public IM.DataLayer.Icon GetIcon(int Id) {
            return base.Channel.GetIcon(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.Icon> GetIconAsync(int Id) {
            return base.Channel.GetIconAsync(Id);
        }
        
        public void AddIcon(IM.DataLayer.Icon entity) {
            base.Channel.AddIcon(entity);
        }
        
        public System.Threading.Tasks.Task AddIconAsync(IM.DataLayer.Icon entity) {
            return base.Channel.AddIconAsync(entity);
        }
        
        public void RemoveIcon(int Id) {
            base.Channel.RemoveIcon(Id);
        }
        
        public System.Threading.Tasks.Task RemoveIconAsync(int Id) {
            return base.Channel.RemoveIconAsync(Id);
        }
        
        public void UpdateIcon(IM.DataLayer.Icon entity) {
            base.Channel.UpdateIcon(entity);
        }
        
        public System.Threading.Tasks.Task UpdateIconAsync(IM.DataLayer.Icon entity) {
            return base.Channel.UpdateIconAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.Image> GetImages() {
            return base.Channel.GetImages();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.Image>> GetImagesAsync() {
            return base.Channel.GetImagesAsync();
        }
        
        public IM.DataLayer.Image GetImage(int Id) {
            return base.Channel.GetImage(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.Image> GetImageAsync(int Id) {
            return base.Channel.GetImageAsync(Id);
        }
        
        public void AddImage(IM.DataLayer.Image entity) {
            base.Channel.AddImage(entity);
        }
        
        public System.Threading.Tasks.Task AddImageAsync(IM.DataLayer.Image entity) {
            return base.Channel.AddImageAsync(entity);
        }
        
        public void RemoveImage(int Id) {
            base.Channel.RemoveImage(Id);
        }
        
        public System.Threading.Tasks.Task RemoveImageAsync(int Id) {
            return base.Channel.RemoveImageAsync(Id);
        }
        
        public void UpdateImage(IM.DataLayer.Image entity) {
            base.Channel.UpdateImage(entity);
        }
        
        public System.Threading.Tasks.Task UpdateImageAsync(IM.DataLayer.Image entity) {
            return base.Channel.UpdateImageAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.medium> GetMediums() {
            return base.Channel.GetMediums();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.medium>> GetMediumsAsync() {
            return base.Channel.GetMediumsAsync();
        }
        
        public IM.DataLayer.medium GetMedium(int Id) {
            return base.Channel.GetMedium(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.medium> GetMediumAsync(int Id) {
            return base.Channel.GetMediumAsync(Id);
        }
        
        public void AddMedium(IM.DataLayer.medium entity) {
            base.Channel.AddMedium(entity);
        }
        
        public System.Threading.Tasks.Task AddMediumAsync(IM.DataLayer.medium entity) {
            return base.Channel.AddMediumAsync(entity);
        }
        
        public void RemoveMedium(int Id) {
            base.Channel.RemoveMedium(Id);
        }
        
        public System.Threading.Tasks.Task RemoveMediumAsync(int Id) {
            return base.Channel.RemoveMediumAsync(Id);
        }
        
        public void UpdateMedium(IM.DataLayer.medium entity) {
            base.Channel.UpdateMedium(entity);
        }
        
        public System.Threading.Tasks.Task UpdateMediumAsync(IM.DataLayer.medium entity) {
            return base.Channel.UpdateMediumAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.Menu> GetMenus() {
            return base.Channel.GetMenus();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.Menu>> GetMenusAsync() {
            return base.Channel.GetMenusAsync();
        }
        
        public System.Collections.Generic.List<IM.DataLayer.Menu> SubMenu(int id) {
            return base.Channel.SubMenu(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.Menu>> SubMenuAsync(int id) {
            return base.Channel.SubMenuAsync(id);
        }
        
        public System.Text.StringBuilder MainMenu() {
            return base.Channel.MainMenu();
        }
        
        public System.Threading.Tasks.Task<System.Text.StringBuilder> MainMenuAsync() {
            return base.Channel.MainMenuAsync();
        }
        
        public void SubCategory(int id) {
            base.Channel.SubCategory(id);
        }
        
        public System.Threading.Tasks.Task SubCategoryAsync(int id) {
            return base.Channel.SubCategoryAsync(id);
        }
        
        public IM.DataLayer.Menu GetMenu(int Id) {
            return base.Channel.GetMenu(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.Menu> GetMenuAsync(int Id) {
            return base.Channel.GetMenuAsync(Id);
        }
        
        public void AddMenu(IM.DataLayer.Menu entity) {
            base.Channel.AddMenu(entity);
        }
        
        public System.Threading.Tasks.Task AddMenuAsync(IM.DataLayer.Menu entity) {
            return base.Channel.AddMenuAsync(entity);
        }
        
        public void RemoveMenu(int Id) {
            base.Channel.RemoveMenu(Id);
        }
        
        public System.Threading.Tasks.Task RemoveMenuAsync(int Id) {
            return base.Channel.RemoveMenuAsync(Id);
        }
        
        public void UpdateMenu(IM.DataLayer.Menu entity) {
            base.Channel.UpdateMenu(entity);
        }
        
        public System.Threading.Tasks.Task UpdateMenuAsync(IM.DataLayer.Menu entity) {
            return base.Channel.UpdateMenuAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.natification> GetNatifications() {
            return base.Channel.GetNatifications();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.natification>> GetNatificationsAsync() {
            return base.Channel.GetNatificationsAsync();
        }
        
        public string toplama(int x, int y) {
            return base.Channel.toplama(x, y);
        }
        
        public System.Threading.Tasks.Task<string> toplamaAsync(int x, int y) {
            return base.Channel.toplamaAsync(x, y);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.userproduct> Getuserproducts() {
            return base.Channel.Getuserproducts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.userproduct>> GetuserproductsAsync() {
            return base.Channel.GetuserproductsAsync();
        }
        
        public IM.DataLayer.userproduct Getuserproduct(int Id) {
            return base.Channel.Getuserproduct(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.userproduct> GetuserproductAsync(int Id) {
            return base.Channel.GetuserproductAsync(Id);
        }
        
        public void Adduserproduct(IM.DataLayer.userproduct entity) {
            base.Channel.Adduserproduct(entity);
        }
        
        public System.Threading.Tasks.Task AdduserproductAsync(IM.DataLayer.userproduct entity) {
            return base.Channel.AdduserproductAsync(entity);
        }
        
        public void Removeuserproduct(int Id) {
            base.Channel.Removeuserproduct(Id);
        }
        
        public System.Threading.Tasks.Task RemoveuserproductAsync(int Id) {
            return base.Channel.RemoveuserproductAsync(Id);
        }
        
        public void Updateuserproduct(IM.DataLayer.userproduct entity) {
            base.Channel.Updateuserproduct(entity);
        }
        
        public System.Threading.Tasks.Task UpdateuserproductAsync(IM.DataLayer.userproduct entity) {
            return base.Channel.UpdateuserproductAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.actionuser> Getactionusers() {
            return base.Channel.Getactionusers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.actionuser>> GetactionusersAsync() {
            return base.Channel.GetactionusersAsync();
        }
        
        public IM.DataLayer.actionuser Getactionuser(int Id) {
            return base.Channel.Getactionuser(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.actionuser> GetactionuserAsync(int Id) {
            return base.Channel.GetactionuserAsync(Id);
        }
        
        public void Addactionuser(IM.DataLayer.actionuser entity) {
            base.Channel.Addactionuser(entity);
        }
        
        public System.Threading.Tasks.Task AddactionuserAsync(IM.DataLayer.actionuser entity) {
            return base.Channel.AddactionuserAsync(entity);
        }
        
        public void Removeactionuser(int Id) {
            base.Channel.Removeactionuser(Id);
        }
        
        public System.Threading.Tasks.Task RemoveactionuserAsync(int Id) {
            return base.Channel.RemoveactionuserAsync(Id);
        }
        
        public void Updateactionuser(IM.DataLayer.actionuser entity) {
            base.Channel.Updateactionuser(entity);
        }
        
        public System.Threading.Tasks.Task UpdateactionuserAsync(IM.DataLayer.actionuser entity) {
            return base.Channel.UpdateactionuserAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.private_auction> Getprivateauctions() {
            return base.Channel.Getprivateauctions();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.private_auction>> GetprivateauctionsAsync() {
            return base.Channel.GetprivateauctionsAsync();
        }
        
        public IM.DataLayer.private_auction Getprivateauction(int Id) {
            return base.Channel.Getprivateauction(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.private_auction> GetprivateauctionAsync(int Id) {
            return base.Channel.GetprivateauctionAsync(Id);
        }
        
        public void Addprivateauction(IM.DataLayer.private_auction entity) {
            base.Channel.Addprivateauction(entity);
        }
        
        public System.Threading.Tasks.Task AddprivateauctionAsync(IM.DataLayer.private_auction entity) {
            return base.Channel.AddprivateauctionAsync(entity);
        }
        
        public void Removeprivateauction(int Id) {
            base.Channel.Removeprivateauction(Id);
        }
        
        public System.Threading.Tasks.Task RemoveprivateauctionAsync(int Id) {
            return base.Channel.RemoveprivateauctionAsync(Id);
        }
        
        public void Updateprivateauction(IM.DataLayer.private_auction entity) {
            base.Channel.Updateprivateauction(entity);
        }
        
        public System.Threading.Tasks.Task UpdateprivateauctionAsync(IM.DataLayer.private_auction entity) {
            return base.Channel.UpdateprivateauctionAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.Log> GetLogs() {
            return base.Channel.GetLogs();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.Log>> GetLogsAsync() {
            return base.Channel.GetLogsAsync();
        }
        
        public IM.DataLayer.Log GetLog(int Id) {
            return base.Channel.GetLog(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.Log> GetLogAsync(int Id) {
            return base.Channel.GetLogAsync(Id);
        }
        
        public void AddLog(IM.DataLayer.Log entity) {
            base.Channel.AddLog(entity);
        }
        
        public System.Threading.Tasks.Task AddLogAsync(IM.DataLayer.Log entity) {
            return base.Channel.AddLogAsync(entity);
        }
        
        public void RemoveLog(int Id) {
            base.Channel.RemoveLog(Id);
        }
        
        public System.Threading.Tasks.Task RemoveLogAsync(int Id) {
            return base.Channel.RemoveLogAsync(Id);
        }
        
        public void UpdateLog(IM.DataLayer.Log entity) {
            base.Channel.UpdateLog(entity);
        }
        
        public System.Threading.Tasks.Task UpdateLogAsync(IM.DataLayer.Log entity) {
            return base.Channel.UpdateLogAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.LogInfo> GetLogInfoes() {
            return base.Channel.GetLogInfoes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.LogInfo>> GetLogInfoesAsync() {
            return base.Channel.GetLogInfoesAsync();
        }
        
        public IM.DataLayer.LogInfo GetLogInfo(int Id) {
            return base.Channel.GetLogInfo(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.LogInfo> GetLogInfoAsync(int Id) {
            return base.Channel.GetLogInfoAsync(Id);
        }
        
        public void AddLogInfo(IM.DataLayer.LogInfo entity) {
            base.Channel.AddLogInfo(entity);
        }
        
        public System.Threading.Tasks.Task AddLogInfoAsync(IM.DataLayer.LogInfo entity) {
            return base.Channel.AddLogInfoAsync(entity);
        }
        
        public void RemoveLogInfo(int Id) {
            base.Channel.RemoveLogInfo(Id);
        }
        
        public System.Threading.Tasks.Task RemoveLogInfoAsync(int Id) {
            return base.Channel.RemoveLogInfoAsync(Id);
        }
        
        public void UpdateLogInfo(IM.DataLayer.LogInfo entity) {
            base.Channel.UpdateLogInfo(entity);
        }
        
        public System.Threading.Tasks.Task UpdateLogInfoAsync(IM.DataLayer.LogInfo entity) {
            return base.Channel.UpdateLogInfoAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.LogStatus> GetLogStatusAll() {
            return base.Channel.GetLogStatusAll();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.LogStatus>> GetLogStatusAllAsync() {
            return base.Channel.GetLogStatusAllAsync();
        }
        
        public IM.DataLayer.LogStatus GetLogStatus(int Id) {
            return base.Channel.GetLogStatus(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.LogStatus> GetLogStatusAsync(int Id) {
            return base.Channel.GetLogStatusAsync(Id);
        }
        
        public void AddLogStatus(IM.DataLayer.LogStatus entity) {
            base.Channel.AddLogStatus(entity);
        }
        
        public System.Threading.Tasks.Task AddLogStatusAsync(IM.DataLayer.LogStatus entity) {
            return base.Channel.AddLogStatusAsync(entity);
        }
        
        public void RemoveLogStatus(int Id) {
            base.Channel.RemoveLogStatus(Id);
        }
        
        public System.Threading.Tasks.Task RemoveLogStatusAsync(int Id) {
            return base.Channel.RemoveLogStatusAsync(Id);
        }
        
        public void UpdateLogStatus(IM.DataLayer.LogStatus entity) {
            base.Channel.UpdateLogStatus(entity);
        }
        
        public System.Threading.Tasks.Task UpdateLogStatusAsync(IM.DataLayer.LogStatus entity) {
            return base.Channel.UpdateLogStatusAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.AMOUNT_OF_INCREASE> GetsAmountofIncrease() {
            return base.Channel.GetsAmountofIncrease();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.AMOUNT_OF_INCREASE>> GetsAmountofIncreaseAsync() {
            return base.Channel.GetsAmountofIncreaseAsync();
        }
        
        public IM.DataLayer.AMOUNT_OF_INCREASE GetAmountofIncrease(int Id) {
            return base.Channel.GetAmountofIncrease(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.AMOUNT_OF_INCREASE> GetAmountofIncreaseAsync(int Id) {
            return base.Channel.GetAmountofIncreaseAsync(Id);
        }
        
        public void AddAmountofIncrease(IM.DataLayer.AMOUNT_OF_INCREASE entity) {
            base.Channel.AddAmountofIncrease(entity);
        }
        
        public System.Threading.Tasks.Task AddAmountofIncreaseAsync(IM.DataLayer.AMOUNT_OF_INCREASE entity) {
            return base.Channel.AddAmountofIncreaseAsync(entity);
        }
        
        public void RemoveAmountofIncrease(int Id) {
            base.Channel.RemoveAmountofIncrease(Id);
        }
        
        public System.Threading.Tasks.Task RemoveAmountofIncreaseAsync(int Id) {
            return base.Channel.RemoveAmountofIncreaseAsync(Id);
        }
        
        public void UpdateAmountofIncrease(IM.DataLayer.AMOUNT_OF_INCREASE entity) {
            base.Channel.UpdateAmountofIncrease(entity);
        }
        
        public System.Threading.Tasks.Task UpdateAmountofIncreaseAsync(IM.DataLayer.AMOUNT_OF_INCREASE entity) {
            return base.Channel.UpdateAmountofIncreaseAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.auction> GetAuctions() {
            return base.Channel.GetAuctions();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.auction>> GetAuctionsAsync() {
            return base.Channel.GetAuctionsAsync();
        }
        
        public IM.DataLayer.auction GetAuction(int Id) {
            return base.Channel.GetAuction(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.auction> GetAuctionAsync(int Id) {
            return base.Channel.GetAuctionAsync(Id);
        }
        
        public void AddAuction(IM.DataLayer.auction entity) {
            base.Channel.AddAuction(entity);
        }
        
        public System.Threading.Tasks.Task AddAuctionAsync(IM.DataLayer.auction entity) {
            return base.Channel.AddAuctionAsync(entity);
        }
        
        public void RemoveAuction(int Id) {
            base.Channel.RemoveAuction(Id);
        }
        
        public System.Threading.Tasks.Task RemoveAuctionAsync(int Id) {
            return base.Channel.RemoveAuctionAsync(Id);
        }
        
        public void UpdateAuction(IM.DataLayer.auction entity) {
            base.Channel.UpdateAuction(entity);
        }
        
        public System.Threading.Tasks.Task UpdateAuctionAsync(IM.DataLayer.auction entity) {
            return base.Channel.UpdateAuctionAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.bank> GetBanks() {
            return base.Channel.GetBanks();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.bank>> GetBanksAsync() {
            return base.Channel.GetBanksAsync();
        }
        
        public IM.DataLayer.bank GetBank(int Id) {
            return base.Channel.GetBank(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.bank> GetBankAsync(int Id) {
            return base.Channel.GetBankAsync(Id);
        }
        
        public void AddBank(IM.DataLayer.bank entity) {
            base.Channel.AddBank(entity);
        }
        
        public System.Threading.Tasks.Task AddBankAsync(IM.DataLayer.bank entity) {
            return base.Channel.AddBankAsync(entity);
        }
        
        public void RemoveBank(int Id) {
            base.Channel.RemoveBank(Id);
        }
        
        public System.Threading.Tasks.Task RemoveBankAsync(int Id) {
            return base.Channel.RemoveBankAsync(Id);
        }
        
        public void UpdateBank(IM.DataLayer.bank entity) {
            base.Channel.UpdateBank(entity);
        }
        
        public System.Threading.Tasks.Task UpdateBankAsync(IM.DataLayer.bank entity) {
            return base.Channel.UpdateBankAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.CarBrand> GetCarBrands() {
            return base.Channel.GetCarBrands();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.CarBrand>> GetCarBrandsAsync() {
            return base.Channel.GetCarBrandsAsync();
        }
        
        public IM.DataLayer.CarBrand GetCarBrand(int Id) {
            return base.Channel.GetCarBrand(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.CarBrand> GetCarBrandAsync(int Id) {
            return base.Channel.GetCarBrandAsync(Id);
        }
        
        public void AddCarBrand(IM.DataLayer.CarBrand entity) {
            base.Channel.AddCarBrand(entity);
        }
        
        public System.Threading.Tasks.Task AddCarBrandAsync(IM.DataLayer.CarBrand entity) {
            return base.Channel.AddCarBrandAsync(entity);
        }
        
        public void RemoveCarBrand(int Id) {
            base.Channel.RemoveCarBrand(Id);
        }
        
        public System.Threading.Tasks.Task RemoveCarBrandAsync(int Id) {
            return base.Channel.RemoveCarBrandAsync(Id);
        }
        
        public void UpdateCarBrand(IM.DataLayer.CarBrand entity) {
            base.Channel.UpdateCarBrand(entity);
        }
        
        public System.Threading.Tasks.Task UpdateCarBrandAsync(IM.DataLayer.CarBrand entity) {
            return base.Channel.UpdateCarBrandAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.CarDetail> GetCarDetails() {
            return base.Channel.GetCarDetails();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.CarDetail>> GetCarDetailsAsync() {
            return base.Channel.GetCarDetailsAsync();
        }
        
        public IM.DataLayer.CarDetail GetCarDetail(int Id) {
            return base.Channel.GetCarDetail(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.CarDetail> GetCarDetailAsync(int Id) {
            return base.Channel.GetCarDetailAsync(Id);
        }
        
        public void AddCarDetail(IM.DataLayer.CarDetail entity) {
            base.Channel.AddCarDetail(entity);
        }
        
        public System.Threading.Tasks.Task AddCarDetailAsync(IM.DataLayer.CarDetail entity) {
            return base.Channel.AddCarDetailAsync(entity);
        }
        
        public void RemoveCarDetail(int Id) {
            base.Channel.RemoveCarDetail(Id);
        }
        
        public System.Threading.Tasks.Task RemoveCarDetailAsync(int Id) {
            return base.Channel.RemoveCarDetailAsync(Id);
        }
        
        public void UpdateCarDetail(IM.DataLayer.CarDetail entity) {
            base.Channel.UpdateCarDetail(entity);
        }
        
        public System.Threading.Tasks.Task UpdateCarDetailAsync(IM.DataLayer.CarDetail entity) {
            return base.Channel.UpdateCarDetailAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.CarHardwareDetail> GetCarHardwareDetails() {
            return base.Channel.GetCarHardwareDetails();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.CarHardwareDetail>> GetCarHardwareDetailsAsync() {
            return base.Channel.GetCarHardwareDetailsAsync();
        }
        
        public IM.DataLayer.CarHardwareDetail GetCarHardwareDetail(int Id) {
            return base.Channel.GetCarHardwareDetail(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.CarHardwareDetail> GetCarHardwareDetailAsync(int Id) {
            return base.Channel.GetCarHardwareDetailAsync(Id);
        }
        
        public void AddCarHardwareDetail(IM.DataLayer.CarHardwareDetail entity) {
            base.Channel.AddCarHardwareDetail(entity);
        }
        
        public System.Threading.Tasks.Task AddCarHardwareDetailAsync(IM.DataLayer.CarHardwareDetail entity) {
            return base.Channel.AddCarHardwareDetailAsync(entity);
        }
        
        public void RemoveCarHardwareDetail(int Id) {
            base.Channel.RemoveCarHardwareDetail(Id);
        }
        
        public System.Threading.Tasks.Task RemoveCarHardwareDetailAsync(int Id) {
            return base.Channel.RemoveCarHardwareDetailAsync(Id);
        }
        
        public void UpdateCarHardwareDetail(IM.DataLayer.CarHardwareDetail entity) {
            base.Channel.UpdateCarHardwareDetail(entity);
        }
        
        public System.Threading.Tasks.Task UpdateCarHardwareDetailAsync(IM.DataLayer.CarHardwareDetail entity) {
            return base.Channel.UpdateCarHardwareDetailAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.CarMake> GetCarMakes() {
            return base.Channel.GetCarMakes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.CarMake>> GetCarMakesAsync() {
            return base.Channel.GetCarMakesAsync();
        }
        
        public IM.DataLayer.CarMake GetCarMake(int Id) {
            return base.Channel.GetCarMake(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.CarMake> GetCarMakeAsync(int Id) {
            return base.Channel.GetCarMakeAsync(Id);
        }
        
        public void AddCarMake(IM.DataLayer.CarMake entity) {
            base.Channel.AddCarMake(entity);
        }
        
        public System.Threading.Tasks.Task AddCarMakeAsync(IM.DataLayer.CarMake entity) {
            return base.Channel.AddCarMakeAsync(entity);
        }
        
        public void RemoveCarMake(int Id) {
            base.Channel.RemoveCarMake(Id);
        }
        
        public System.Threading.Tasks.Task RemoveCarMakeAsync(int Id) {
            return base.Channel.RemoveCarMakeAsync(Id);
        }
        
        public void UpdateCarMake(IM.DataLayer.CarMake entity) {
            base.Channel.UpdateCarMake(entity);
        }
        
        public System.Threading.Tasks.Task UpdateCarMakeAsync(IM.DataLayer.CarMake entity) {
            return base.Channel.UpdateCarMakeAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.CarTechnicalDetail> GetCarTechnicalDetails() {
            return base.Channel.GetCarTechnicalDetails();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.CarTechnicalDetail>> GetCarTechnicalDetailsAsync() {
            return base.Channel.GetCarTechnicalDetailsAsync();
        }
        
        public IM.DataLayer.CarTechnicalDetail GetCarTechnicalDetail(int Id) {
            return base.Channel.GetCarTechnicalDetail(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.CarTechnicalDetail> GetCarTechnicalDetailAsync(int Id) {
            return base.Channel.GetCarTechnicalDetailAsync(Id);
        }
        
        public void AddCarTechnicalDetail(IM.DataLayer.CarTechnicalDetail entity) {
            base.Channel.AddCarTechnicalDetail(entity);
        }
        
        public System.Threading.Tasks.Task AddCarTechnicalDetailAsync(IM.DataLayer.CarTechnicalDetail entity) {
            return base.Channel.AddCarTechnicalDetailAsync(entity);
        }
        
        public void RemoveCarTechnicalDetail(int Id) {
            base.Channel.RemoveCarTechnicalDetail(Id);
        }
        
        public System.Threading.Tasks.Task RemoveCarTechnicalDetailAsync(int Id) {
            return base.Channel.RemoveCarTechnicalDetailAsync(Id);
        }
        
        public void UpdateCarTechnicalDetail(IM.DataLayer.CarTechnicalDetail entity) {
            base.Channel.UpdateCarTechnicalDetail(entity);
        }
        
        public System.Threading.Tasks.Task UpdateCarTechnicalDetailAsync(IM.DataLayer.CarTechnicalDetail entity) {
            return base.Channel.UpdateCarTechnicalDetailAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.city> GetCities() {
            return base.Channel.GetCities();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.city>> GetCitiesAsync() {
            return base.Channel.GetCitiesAsync();
        }
        
        public IM.DataLayer.city GetCity(int Id) {
            return base.Channel.GetCity(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.city> GetCityAsync(int Id) {
            return base.Channel.GetCityAsync(Id);
        }
        
        public void AddCity(IM.DataLayer.city entity) {
            base.Channel.AddCity(entity);
        }
        
        public System.Threading.Tasks.Task AddCityAsync(IM.DataLayer.city entity) {
            return base.Channel.AddCityAsync(entity);
        }
        
        public void RemoveCity(int Id) {
            base.Channel.RemoveCity(Id);
        }
        
        public System.Threading.Tasks.Task RemoveCityAsync(int Id) {
            return base.Channel.RemoveCityAsync(Id);
        }
        
        public void UpdateCity(IM.DataLayer.city entity) {
            base.Channel.UpdateCity(entity);
        }
        
        public System.Threading.Tasks.Task UpdateCityAsync(IM.DataLayer.city entity) {
            return base.Channel.UpdateCityAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.Claim> GetClaims() {
            return base.Channel.GetClaims();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.Claim>> GetClaimsAsync() {
            return base.Channel.GetClaimsAsync();
        }
        
        public IM.DataLayer.Claim GetClaim(int Id) {
            return base.Channel.GetClaim(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.Claim> GetClaimAsync(int Id) {
            return base.Channel.GetClaimAsync(Id);
        }
        
        public void AddClaim(IM.DataLayer.Claim entity) {
            base.Channel.AddClaim(entity);
        }
        
        public System.Threading.Tasks.Task AddClaimAsync(IM.DataLayer.Claim entity) {
            return base.Channel.AddClaimAsync(entity);
        }
        
        public void RemoveClaim(int Id) {
            base.Channel.RemoveClaim(Id);
        }
        
        public System.Threading.Tasks.Task RemoveClaimAsync(int Id) {
            return base.Channel.RemoveClaimAsync(Id);
        }
        
        public void UpdateClaim(IM.DataLayer.Claim entity) {
            base.Channel.UpdateClaim(entity);
        }
        
        public System.Threading.Tasks.Task UpdateClaimAsync(IM.DataLayer.Claim entity) {
            return base.Channel.UpdateClaimAsync(entity);
        }
        
        public System.Collections.Generic.List<IM.DataLayer.Color> GetAllColor() {
            return base.Channel.GetAllColor();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IM.DataLayer.Color>> GetAllColorAsync() {
            return base.Channel.GetAllColorAsync();
        }
        
        public IM.DataLayer.Color GetColor(int Id) {
            return base.Channel.GetColor(Id);
        }
        
        public System.Threading.Tasks.Task<IM.DataLayer.Color> GetColorAsync(int Id) {
            return base.Channel.GetColorAsync(Id);
        }
        
        public void AddColor(IM.DataLayer.Color entity) {
            base.Channel.AddColor(entity);
        }
        
        public System.Threading.Tasks.Task AddColorAsync(IM.DataLayer.Color entity) {
            return base.Channel.AddColorAsync(entity);
        }
        
        public void RemoveColor(int Id) {
            base.Channel.RemoveColor(Id);
        }
        
        public System.Threading.Tasks.Task RemoveColorAsync(int Id) {
            return base.Channel.RemoveColorAsync(Id);
        }
    }
}
